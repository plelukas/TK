
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6F54E9AD75DA6162B90FDC75AB9452BB'
    
_lr_action_items = {'FLOAT':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,23,24,26,27,28,30,32,33,36,37,39,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,83,91,92,93,96,115,120,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,12,-74,-2,-71,-5,-17,12,-14,-20,-3,-21,-16,12,-13,-19,-18,12,12,-22,-12,-15,12,-73,-11,-37,12,12,12,-36,12,12,12,12,12,12,12,12,12,12,12,12,-23,12,12,12,12,12,12,12,12,12,12,12,-4,12,-24,-25,-35,-26,12,12,12,12,12,-38,-27,-32,-33,-28,-30,-34,-75,12,12,-29,-31,]),'%':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,56,-44,-42,56,-44,56,56,56,-63,-64,-49,56,56,56,56,56,56,56,56,56,56,-47,56,56,56,56,56,-48,56,56,56,-65,-66,]),'GE':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,57,-44,-42,57,-44,57,57,57,-63,-64,-49,None,-55,-45,None,None,57,None,57,-56,None,-47,57,57,-46,57,None,-48,57,57,57,-65,-66,]),'=':([34,40,126,],[76,81,81,]),'^':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,72,-44,-42,72,-44,72,72,72,-63,-64,-49,-62,-55,-45,-60,-58,-51,-57,72,-56,-59,-47,72,72,-46,-52,-61,-48,72,72,72,-65,-66,]),'+':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,59,-44,-42,59,-44,59,59,59,-63,-64,-49,59,59,-45,59,59,59,59,59,59,59,-47,59,59,-46,59,59,-48,59,59,59,-65,-66,]),'EQ':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,63,-44,-42,63,-44,63,63,63,-63,-64,-49,None,-55,-45,None,None,63,None,63,-56,None,-47,63,63,-46,63,None,-48,63,63,63,-65,-66,]),'&':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,62,-44,-42,62,-44,62,62,62,-63,-64,-49,-62,-55,-45,-60,-58,-51,-57,62,-56,-59,-47,62,62,-46,62,-61,-48,62,62,62,-65,-66,]),'<':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,60,-44,-42,60,-44,60,60,60,-63,-64,-49,None,-55,-45,None,None,60,None,60,-56,None,-47,60,60,-46,60,None,-48,60,60,60,-65,-66,]),'$end':([0,1,2,4,5,6,7,9,10,11,15,16,21,22,24,25,26,27,32,33,36,39,43,44,48,68,83,92,93,96,115,132,134,141,142,143,144,145,146,150,151,],[-3,0,-72,-10,-74,-2,-71,-5,-17,-9,-14,-20,-21,-16,-13,-1,-19,-18,-22,-12,-15,-73,-11,-37,-36,-23,-4,-24,-25,-35,-26,-38,-27,-32,-33,-28,-30,-34,-75,-29,-31,]),'AND':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,70,-44,-42,70,-44,70,70,70,-63,-64,-49,-62,-55,-45,-60,-58,-51,-57,-50,-56,-59,-47,70,-53,-46,-52,-61,-48,70,70,70,-65,-66,]),'BREAK':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,24,26,27,32,33,36,37,39,43,44,47,48,68,75,78,83,92,93,96,115,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,13,-74,-2,-71,-5,-17,13,-14,-20,-3,-21,-16,-13,-19,-18,-22,-12,-15,13,-73,-11,-37,13,-36,-23,13,13,-4,-24,-25,-35,-26,13,13,13,13,-38,-27,-32,-33,-28,-30,-34,-75,13,13,-29,-31,]),'OR':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,69,-44,-42,69,-44,69,69,69,-63,-64,-49,-62,-55,-45,-60,-58,-51,-57,-50,-56,-59,-47,-54,-53,-46,-52,-61,-48,69,69,69,-65,-66,]),'/':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,74,-44,-42,74,-44,74,74,74,-63,-64,-49,74,74,74,74,74,74,74,74,74,74,-47,74,74,74,74,74,-48,74,74,74,-65,-66,]),'NEQ':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,61,-44,-42,61,-44,61,61,61,-63,-64,-49,None,-55,-45,None,None,61,None,61,-56,None,-47,61,61,-46,61,None,-48,61,61,61,-65,-66,]),'WHILE':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,24,26,27,32,33,36,37,39,43,44,47,48,68,75,78,83,92,93,96,115,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,14,-74,-2,-71,-5,-17,14,-14,-20,-3,-21,-16,-13,-19,-18,-22,-12,-15,14,-73,-11,-37,14,-36,-23,14,14,-4,-24,-25,-35,-26,14,14,14,14,-38,-27,-32,-33,-28,-30,-34,-75,14,14,-29,-31,]),'RETURN':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,24,26,27,32,33,36,37,39,43,44,47,48,68,75,78,83,92,93,96,115,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,30,-74,-2,-71,-5,-17,30,-14,-20,-3,-21,-16,-13,-19,-18,-22,-12,-15,30,-73,-11,-37,30,-36,-23,30,30,-4,-24,-25,-35,-26,30,30,30,30,-38,-27,-32,-33,-28,-30,-34,-75,30,30,-29,-31,]),'LE':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,73,-44,-42,73,-44,73,73,73,-63,-64,-49,None,-55,-45,None,None,73,None,73,-56,None,-47,73,73,-46,73,None,-48,73,73,73,-65,-66,]),')':([12,20,29,35,50,52,53,54,77,80,84,85,86,87,88,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,118,119,121,123,124,133,135,136,139,147,],[-41,-40,-43,-42,-70,-44,94,95,-68,-77,128,-39,129,130,131,-63,-64,-49,-62,-55,-45,-60,-58,-51,-57,-50,-56,-59,-47,-54,-53,-46,-52,-61,-48,-67,135,136,138,-76,-79,-69,-65,-66,-80,-78,]),'error':([0,2,6,9,18,23,28,45,46,47,77,83,],[-3,3,-2,-5,-3,51,54,86,88,3,119,-4,]),'IF':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,24,26,27,32,33,36,37,39,43,44,47,48,68,75,78,83,92,93,96,115,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,17,-74,-2,-71,-5,-17,17,-14,-20,-3,-21,-16,-13,-19,-18,-22,-12,-15,17,-73,-11,-37,17,-36,-23,17,17,-4,-24,-25,-35,-26,17,17,17,17,-38,-27,-32,-33,-28,-30,-34,-75,17,17,-29,-31,]),'*':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,67,-44,-42,67,-44,67,67,67,-63,-64,-49,67,67,67,67,67,67,67,67,67,67,-47,67,67,67,67,67,-48,67,67,67,-65,-66,]),'{':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,24,26,27,32,33,36,37,39,43,44,47,48,68,75,78,83,92,93,96,115,128,129,130,131,132,134,138,141,142,143,144,145,146,148,149,150,151,],[-3,-72,18,-74,-2,-71,-5,-17,18,-14,-20,-3,-21,-16,-13,-19,-18,-22,-12,-15,18,-73,-11,-37,18,-36,-23,18,18,-4,-24,-25,-35,-26,18,18,18,18,-38,-27,18,-32,-33,-28,-30,-34,-75,18,18,-29,-31,]),':':([34,],[75,]),'CONTINUE':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,24,26,27,32,33,36,37,39,43,44,47,48,68,75,78,83,92,93,96,115,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,19,-74,-2,-71,-5,-17,19,-14,-20,-3,-21,-16,-13,-19,-18,-22,-12,-15,19,-73,-11,-37,19,-36,-23,19,19,-4,-24,-25,-35,-26,19,19,19,19,-38,-27,-32,-33,-28,-30,-34,-75,19,19,-29,-31,]),'}':([6,9,10,11,15,16,18,21,22,24,26,27,32,33,36,43,44,47,48,68,83,89,92,93,96,115,132,134,141,142,143,144,145,150,151,],[-2,-5,-17,-9,-14,-20,-3,-21,-16,-13,-19,-18,-22,-12,-15,-11,-37,-10,-36,-23,-4,132,-24,-25,-35,-26,-38,-27,-32,-33,-28,-30,-34,-29,-31,]),'INTEGER':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,23,24,26,27,28,30,32,33,36,37,39,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,83,91,92,93,96,115,120,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,20,-74,-2,-71,-5,-17,20,-14,-20,-3,-21,-16,20,-13,-19,-18,20,20,-22,-12,-15,20,-73,-11,-37,20,20,20,-36,20,20,20,20,20,20,20,20,20,20,20,20,-23,20,20,20,20,20,20,20,20,20,20,20,-4,20,-24,-25,-35,-26,20,20,20,20,20,-38,-27,-32,-33,-28,-30,-34,-75,20,20,-29,-31,]),'ELSE':([10,15,16,21,22,24,26,27,32,36,44,48,68,92,93,96,115,132,134,141,142,143,144,145,150,151,],[-17,-14,-20,-21,-16,-13,-19,-18,-22,-15,-37,-36,-23,-24,-25,-35,-26,-38,-27,-32,-33,148,149,-34,-29,-31,]),'SHR':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,65,-44,-42,65,-44,65,65,65,-63,-64,-49,65,-55,-45,65,65,65,65,65,-56,65,-47,65,65,-46,65,65,-48,65,65,65,-65,-66,]),'>':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,66,-44,-42,66,-44,66,66,66,-63,-64,-49,None,-55,-45,None,None,66,None,66,-56,None,-47,66,66,-46,66,None,-48,66,66,66,-65,-66,]),',':([12,20,29,35,41,42,49,50,52,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,123,124,125,127,133,135,136,139,147,],[-41,-40,-43,-42,82,-7,91,-70,-44,-63,-64,-49,-62,-55,-45,-60,-58,-51,-57,-50,-56,-59,-47,-54,-53,-46,-52,-61,-48,91,140,-79,-8,-6,-69,-65,-66,-80,-78,]),'|':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,64,-44,-42,64,-44,64,64,64,-63,-64,-49,-62,-55,-45,-60,-58,-51,-57,-50,-56,-59,-47,64,64,-46,-52,-61,-48,64,64,64,-65,-66,]),'TYPE':([0,2,5,6,7,9,18,39,47,80,83,132,140,146,],[-3,8,-74,-2,38,-5,-3,-73,90,122,-4,-38,122,-75,]),';':([3,12,13,19,20,29,31,34,35,41,42,49,50,51,52,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,127,133,135,136,137,],[9,-41,44,48,-40,-43,68,-44,-42,83,-7,92,-70,93,-44,96,-39,-63,-64,-49,-62,-55,-45,-60,-58,-51,-57,-50,-56,-59,-47,-54,-53,-46,-52,-61,-48,134,-8,-6,-69,-65,-66,145,]),'(':([0,2,4,5,6,7,9,10,11,14,15,16,17,18,21,22,23,24,26,27,28,30,32,33,34,36,37,39,40,43,44,45,46,47,48,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,91,92,93,96,115,120,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,28,-74,-2,-71,-5,-17,28,45,-14,-20,46,-3,-21,-16,28,-13,-19,-18,28,28,-22,-12,77,-15,28,-73,80,-11,-37,28,28,28,-36,77,28,28,28,28,28,28,28,28,28,28,28,28,-23,28,28,28,28,28,28,28,28,28,28,80,28,-4,28,-24,-25,-35,-26,28,28,28,28,28,-38,-27,-32,-33,-28,-30,-34,-75,28,28,-29,-31,]),'UNTIL':([10,15,16,21,22,24,26,27,32,33,36,43,44,48,68,78,92,93,96,115,132,134,141,142,143,144,145,150,151,],[-17,-14,-20,-21,-16,-13,-19,-18,-22,-12,-15,-11,-37,-36,-23,120,-24,-25,-35,-26,-38,-27,-32,-33,-28,-30,-34,-29,-31,]),'SHL':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,58,-44,-42,58,-44,58,58,58,-63,-64,-49,58,-55,-45,58,58,58,58,58,-56,58,-47,58,58,-46,58,58,-48,58,58,58,-65,-66,]),'-':([12,20,29,31,34,35,50,52,53,55,85,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,125,133,135,136,],[-41,-40,-43,71,-44,-42,71,-44,71,71,71,-63,-64,-49,71,71,-45,71,71,71,71,71,71,71,-47,71,71,-46,71,71,-48,71,71,71,-65,-66,]),'ID':([0,2,4,5,6,7,8,9,10,11,15,16,18,21,22,23,24,26,27,28,30,32,33,36,37,38,39,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,90,91,92,93,96,115,120,122,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,34,-74,-2,-71,40,-5,-17,34,-14,-20,-3,-21,-16,52,-13,-19,-18,52,52,-22,-12,-15,34,79,-73,-11,-37,52,52,34,-36,52,52,52,52,52,52,52,52,52,52,52,52,-23,52,52,52,52,52,52,34,52,52,34,52,126,-4,126,52,-24,-25,-35,-26,52,139,34,34,34,34,-38,-27,-32,-33,-28,-30,-34,-75,34,34,-29,-31,]),'STRING':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,23,24,26,27,28,30,32,33,36,37,39,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,83,91,92,93,96,115,120,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,35,-74,-2,-71,-5,-17,35,-14,-20,-3,-21,-16,35,-13,-19,-18,35,35,-22,-12,-15,35,-73,-11,-37,35,35,35,-36,35,35,35,35,35,35,35,35,35,35,35,35,-23,35,35,35,35,35,35,35,35,35,35,35,-4,35,-24,-25,-35,-26,35,35,35,35,35,-38,-27,-32,-33,-28,-30,-34,-75,35,35,-29,-31,]),'PRINT':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,24,26,27,32,33,36,37,39,43,44,47,48,68,75,78,83,92,93,96,115,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,23,-74,-2,-71,-5,-17,23,-14,-20,-3,-21,-16,-13,-19,-18,-22,-12,-15,23,-73,-11,-37,23,-36,-23,23,23,-4,-24,-25,-35,-26,23,23,23,23,-38,-27,-32,-33,-28,-30,-34,-75,23,23,-29,-31,]),'REPEAT':([0,2,4,5,6,7,9,10,11,15,16,18,21,22,24,26,27,32,33,36,37,39,43,44,47,48,68,75,78,83,92,93,96,115,128,129,130,131,132,134,141,142,143,144,145,146,148,149,150,151,],[-3,-72,37,-74,-2,-71,-5,-17,37,-14,-20,-3,-21,-16,-13,-19,-18,-22,-12,-15,37,-73,-11,-37,37,-36,-23,37,37,-4,-24,-25,-35,-26,37,37,37,37,-38,-27,-32,-33,-28,-30,-34,-75,37,37,-29,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([4,11,23,28,30,37,45,46,47,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,81,91,120,128,129,130,131,148,149,],[31,31,50,53,55,31,85,85,31,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,31,116,50,31,125,133,85,31,31,31,31,31,31,]),'fundefs_opt':([2,],[4,]),'fundef':([2,7,],[5,39,]),'while_instr':([4,11,37,47,75,78,128,129,130,131,148,149,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'args_list_or_empty':([80,],[121,]),'instructions_opt':([4,47,],[25,89,]),'condition':([45,46,120,],[84,87,137,]),'declarations':([0,18,],[2,47,]),'instructions':([4,37,47,],[11,78,11,]),'expr_list':([23,77,],[49,117,]),'arg':([80,140,],[124,147,]),'return_instr':([4,11,37,47,75,78,128,129,130,131,148,149,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'repeat_instr':([4,11,37,47,75,78,128,129,130,131,148,149,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'inits':([8,90,],[41,41,]),'const':([4,11,23,28,30,37,45,46,47,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,81,91,120,128,129,130,131,148,149,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'labeled_instr':([4,11,37,47,75,78,128,129,130,131,148,149,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'break_instr':([4,11,37,47,75,78,128,129,130,131,148,149,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'fundefs':([2,],[7,]),'init':([8,82,90,],[42,127,42,]),'compound_instr':([4,11,37,47,75,78,128,129,130,131,138,148,149,],[32,32,32,32,32,32,32,32,32,32,146,32,32,]),'assignment':([4,11,37,47,75,78,128,129,130,131,148,149,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'declaration':([2,47,],[6,6,]),'program':([0,],[1,]),'expr_list_or_empty':([77,],[118,]),'args_list':([80,],[123,]),'instruction':([4,11,37,47,75,78,128,129,130,131,148,149,],[33,43,33,33,115,43,141,142,143,144,150,151,]),'print_instr':([4,11,37,47,75,78,128,129,130,131,148,149,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'continue_instr':([4,11,37,47,75,78,128,129,130,131,148,149,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'choice_instr':([4,11,37,47,75,78,128,129,130,131,148,149,],[22,22,22,22,22,22,22,22,22,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',39),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',49),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',50),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',59),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',60),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',66),
  ('inits -> init','inits',1,'p_inits','Cparser.py',67),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',77),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',82),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',83),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',91),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',92),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',102),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',112),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',117),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',118),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',123),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',128),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',133),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',135),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',136),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',144),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',145),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',150),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',155),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',160),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',165),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',170),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',175),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',180),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',181),
  ('const -> STRING','const',1,'p_const','Cparser.py',182),
  ('expression -> const','expression',1,'p_expression','Cparser.py',187),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',188),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',189),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',190),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',191),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',192),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',193),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',194),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',207),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',208),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',209),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',210),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',224),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',225),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',230),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',231),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',241),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',242),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',247),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',248),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',258),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',263),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',264),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',269),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',270),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',280),
]
