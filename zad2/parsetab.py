
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '2965B39AD0A06E75E5F4B1451BC78094'
    
_lr_action_items = {'&':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,49,-42,-41,-44,-44,49,49,49,49,49,-51,-62,-60,-56,-46,-59,49,-61,-48,-49,-45,-57,-58,-55,-47,49,49,-64,-63,49,49,49,-65,-66,]),'STRING':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,28,29,30,31,32,33,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,77,78,79,80,82,107,108,109,110,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,23,-73,-5,-3,-15,-22,-14,-12,-20,23,23,23,-19,-18,-17,-16,-21,23,-13,23,-36,23,23,-37,23,23,23,23,23,23,23,23,23,23,23,23,23,-23,23,23,23,23,23,-11,23,23,23,23,23,-4,23,23,-25,-24,23,-35,-26,-38,23,23,23,23,-27,-32,-33,-34,-28,-30,-75,23,23,-29,-31,]),':':([39,],[77,]),'CONTINUE':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,29,30,31,32,33,36,44,45,47,61,67,68,77,80,108,109,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,13,-73,-5,-3,-15,-22,-14,-12,-20,13,13,-19,-18,-17,-16,-21,-13,-36,13,-37,-23,-11,13,13,-4,-25,-24,-35,-26,-38,13,13,13,13,-27,-32,-33,-34,-28,-30,-75,13,13,-29,-31,]),'{':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,29,30,31,32,33,36,44,45,47,61,67,68,77,80,108,109,115,116,128,129,130,133,134,135,139,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,14,-73,-5,-3,-15,-22,-14,-12,-20,14,14,-19,-18,-17,-16,-21,-13,-36,14,-37,-23,-11,14,14,-4,-25,-24,-35,-26,-38,14,14,14,14,-27,14,-32,-33,-34,-28,-30,-75,14,14,-29,-31,]),'-':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,53,-42,-41,-44,-44,53,53,53,53,53,53,53,53,53,-46,53,53,53,-48,-49,-45,53,53,53,-47,53,53,-64,-63,53,53,53,-65,-66,]),'>':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,54,-42,-41,-44,-44,54,54,54,54,54,54,None,None,-56,-46,None,54,None,-48,-49,-45,None,None,-55,-47,54,54,-64,-63,54,54,54,-65,-66,]),'REPEAT':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,29,30,31,32,33,36,44,45,47,61,67,68,77,80,108,109,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,27,-73,-5,-3,-15,-22,-14,-12,-20,27,27,-19,-18,-17,-16,-21,-13,-36,27,-37,-23,-11,27,27,-4,-25,-24,-35,-26,-38,27,27,27,27,-27,-32,-33,-34,-28,-30,-75,27,27,-29,-31,]),'^':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,55,-42,-41,-44,-44,55,55,55,55,55,-51,-62,-60,-56,-46,-59,-52,-61,-48,-49,-45,-57,-58,-55,-47,55,55,-64,-63,55,55,55,-65,-66,]),'PRINT':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,29,30,31,32,33,36,44,45,47,61,67,68,77,80,108,109,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,28,-73,-5,-3,-15,-22,-14,-12,-20,28,28,-19,-18,-17,-16,-21,-13,-36,28,-37,-23,-11,28,28,-4,-25,-24,-35,-26,-38,28,28,28,28,-27,-32,-33,-34,-28,-30,-75,28,28,-29,-31,]),'UNTIL':([16,18,20,24,25,29,30,31,32,33,36,44,47,61,67,68,108,109,115,116,128,135,141,142,143,144,145,150,151,],[-15,-22,-14,-12,-20,-19,-18,-17,-16,-21,-13,-36,-37,-23,-11,107,-25,-24,-35,-26,-38,-27,-32,-33,-34,-28,-30,-29,-31,]),'GE':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,50,-42,-41,-44,-44,50,50,50,50,50,50,None,None,-56,-46,None,50,None,-48,-49,-45,None,None,-55,-47,50,50,-64,-63,50,50,50,-65,-66,]),'EQ':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,60,-42,-41,-44,-44,60,60,60,60,60,60,None,None,-56,-46,None,60,None,-48,-49,-45,None,None,-55,-47,60,60,-64,-63,60,60,60,-65,-66,]),'NEQ':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,62,-42,-41,-44,-44,62,62,62,62,62,62,None,None,-56,-46,None,62,None,-48,-49,-45,None,None,-55,-47,62,62,-64,-63,62,62,62,-65,-66,]),'SHL':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,63,-42,-41,-44,-44,63,63,63,63,63,63,63,63,-56,-46,63,63,63,-48,-49,-45,63,63,-55,-47,63,63,-64,-63,63,63,63,-65,-66,]),'WHILE':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,29,30,31,32,33,36,44,45,47,61,67,68,77,80,108,109,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,15,-73,-5,-3,-15,-22,-14,-12,-20,15,15,-19,-18,-17,-16,-21,-13,-36,15,-37,-23,-11,15,15,-4,-25,-24,-35,-26,-38,15,15,15,15,-27,-32,-33,-34,-28,-30,-75,15,15,-29,-31,]),'/':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,57,-42,-41,-44,-44,57,57,57,57,57,57,57,57,57,57,57,57,57,-48,-49,57,57,57,57,-47,57,57,-64,-63,57,57,57,-65,-66,]),'TYPE':([0,2,3,4,6,9,11,14,45,80,83,128,138,147,],[-3,8,10,-2,-74,-73,-5,-3,85,-4,127,-38,127,-75,]),'|':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,48,-42,-41,-44,-44,48,48,48,48,-50,-51,-62,-60,-56,-46,-59,-52,-61,-48,-49,-45,-57,-58,-55,-47,48,48,-64,-63,48,48,48,-65,-66,]),'*':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,64,-42,-41,-44,-44,64,64,64,64,64,64,64,64,64,64,64,64,64,-48,-49,64,64,64,64,-47,64,64,-64,-63,64,64,64,-65,-66,]),'IF':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,29,30,31,32,33,36,44,45,47,61,67,68,77,80,108,109,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,34,-73,-5,-3,-15,-22,-14,-12,-20,34,34,-19,-18,-17,-16,-21,-13,-36,34,-37,-23,-11,34,34,-4,-25,-24,-35,-26,-38,34,34,34,34,-27,-32,-33,-34,-28,-30,-75,34,34,-29,-31,]),'$end':([0,1,2,3,4,6,7,9,11,12,16,18,20,24,25,26,29,30,31,32,33,36,44,47,61,67,80,108,109,115,116,128,135,141,142,143,144,145,147,150,151,],[-3,0,-72,-71,-2,-74,-10,-73,-5,-1,-15,-22,-14,-12,-20,-9,-19,-18,-17,-16,-21,-13,-36,-37,-23,-11,-4,-25,-24,-35,-26,-38,-27,-32,-33,-34,-28,-30,-75,-29,-31,]),'=':([39,42,122,],[78,82,82,]),'SHR':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,52,-42,-41,-44,-44,52,52,52,52,52,52,52,52,-56,-46,52,52,52,-48,-49,-45,52,52,-55,-47,52,52,-64,-63,52,52,52,-65,-66,]),')':([17,19,23,37,69,71,74,75,79,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,111,112,113,114,118,119,120,124,125,126,132,136,137,140,146,],[-43,-40,-42,-41,-44,-70,113,114,-68,-77,129,130,-39,-50,-51,-62,-60,-56,-46,-59,-52,-61,-48,-49,-45,-57,-58,-55,-47,-53,-54,133,134,-64,-63,136,137,-67,-76,139,-79,-69,-65,-66,-80,-78,]),'error':([0,2,4,11,14,28,35,45,46,73,79,80,],[-3,5,-2,-5,-3,70,74,5,87,112,119,-4,]),';':([5,13,17,19,21,22,23,37,39,40,41,69,70,71,72,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,121,123,131,132,136,137,],[11,44,-43,-40,47,61,-42,-41,-44,-7,80,-44,108,-70,109,115,-39,-50,-51,-62,-60,-56,-46,-59,-52,-61,-48,-49,-45,-57,-58,-55,-47,-53,-54,-64,-63,135,-6,-8,143,-69,-65,-66,]),'LE':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,56,-42,-41,-44,-44,56,56,56,56,56,56,None,None,-56,-46,None,56,None,-48,-49,-45,None,None,-55,-47,56,56,-64,-63,56,56,56,-65,-66,]),'AND':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,65,-42,-41,-44,-44,65,65,65,65,-50,-51,-62,-60,-56,-46,-59,-52,-61,-48,-49,-45,-57,-58,-55,-47,-53,65,-64,-63,65,65,65,-65,-66,]),'OR':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,66,-42,-41,-44,-44,66,66,66,66,-50,-51,-62,-60,-56,-46,-59,-52,-61,-48,-49,-45,-57,-58,-55,-47,-53,-54,-64,-63,66,66,66,-65,-66,]),'%':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,58,-42,-41,-44,-44,58,58,58,58,58,58,58,58,58,58,58,58,58,-48,-49,58,58,58,58,-47,58,58,-64,-63,58,58,58,-65,-66,]),'+':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,59,-42,-41,-44,-44,59,59,59,59,59,59,59,59,59,-46,59,59,59,-48,-49,-45,59,59,59,-47,59,59,-64,-63,59,59,59,-65,-66,]),'FLOAT':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,28,29,30,31,32,33,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,77,78,79,80,82,107,108,109,110,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,37,-73,-5,-3,-15,-22,-14,-12,-20,37,37,37,-19,-18,-17,-16,-21,37,-13,37,-36,37,37,-37,37,37,37,37,37,37,37,37,37,37,37,37,37,-23,37,37,37,37,37,-11,37,37,37,37,37,-4,37,37,-25,-24,37,-35,-26,-38,37,37,37,37,-27,-32,-33,-34,-28,-30,-75,37,37,-29,-31,]),'INTEGER':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,28,29,30,31,32,33,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,77,78,79,80,82,107,108,109,110,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,19,-73,-5,-3,-15,-22,-14,-12,-20,19,19,19,-19,-18,-17,-16,-21,19,-13,19,-36,19,19,-37,19,19,19,19,19,19,19,19,19,19,19,19,19,-23,19,19,19,19,19,-11,19,19,19,19,19,-4,19,19,-25,-24,19,-35,-26,-38,19,19,19,19,-27,-32,-33,-34,-28,-30,-75,19,19,-29,-31,]),'RETURN':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,29,30,31,32,33,36,44,45,47,61,67,68,77,80,108,109,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,38,-73,-5,-3,-15,-22,-14,-12,-20,38,38,-19,-18,-17,-16,-21,-13,-36,38,-37,-23,-11,38,38,-4,-25,-24,-35,-26,-38,38,38,38,38,-27,-32,-33,-34,-28,-30,-75,38,38,-29,-31,]),'(':([0,2,3,4,6,7,9,11,14,15,16,18,20,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,77,78,79,80,82,107,108,109,110,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,35,-73,-5,-3,46,-15,-22,-14,-12,-20,35,35,35,-19,-18,-17,-16,-21,73,35,-13,35,79,83,83,-36,35,35,-37,35,35,35,35,35,35,35,35,35,35,35,35,35,-23,35,35,35,35,35,-11,35,79,35,35,35,35,-4,35,35,-25,-24,35,-35,-26,-38,35,35,35,35,-27,-32,-33,-34,-28,-30,-75,35,35,-29,-31,]),'}':([4,11,14,16,18,20,24,25,26,29,30,31,32,33,36,44,45,47,61,67,80,84,108,109,115,116,128,135,141,142,143,144,145,150,151,],[-2,-5,-3,-15,-22,-14,-12,-20,-9,-19,-18,-17,-16,-21,-13,-36,-10,-37,-23,-11,-4,128,-25,-24,-35,-26,-38,-27,-32,-33,-34,-28,-30,-29,-31,]),',':([17,19,23,37,40,41,69,71,72,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,120,121,123,124,126,132,136,137,140,146,],[-43,-40,-42,-41,-7,81,-44,-70,110,-50,-51,-62,-60,-56,-46,-59,-52,-61,-48,-49,-45,-57,-58,-55,-47,-53,-54,-64,-63,110,-6,-8,138,-79,-69,-65,-66,-80,-78,]),'ELSE':([16,18,20,25,29,30,31,32,33,36,44,47,61,108,109,115,116,128,135,141,142,143,144,145,150,151,],[-15,-22,-14,-20,-19,-18,-17,-16,-21,-13,-36,-37,-23,-25,-24,-35,-26,-38,-27,-32,-33,-34,148,149,-29,-31,]),'BREAK':([0,2,3,4,6,7,9,11,14,16,18,20,24,25,26,27,29,30,31,32,33,36,44,45,47,61,67,68,77,80,108,109,115,116,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,21,-73,-5,-3,-15,-22,-14,-12,-20,21,21,-19,-18,-17,-16,-21,-13,-36,21,-37,-23,-11,21,21,-4,-25,-24,-35,-26,-38,21,21,21,21,-27,-32,-33,-34,-28,-30,-75,21,21,-29,-31,]),'ID':([0,2,3,4,6,7,8,9,10,11,14,16,18,20,24,25,26,27,28,29,30,31,32,33,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,77,78,79,80,81,82,85,107,108,109,110,115,116,127,128,129,130,133,134,135,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-2,-74,39,42,-73,43,-5,-3,-15,-22,-14,-12,-20,39,39,69,-19,-18,-17,-16,-21,69,-13,69,-36,39,69,-37,69,69,69,69,69,69,69,69,69,69,69,69,69,-23,69,69,69,69,69,-11,39,69,39,69,69,-4,122,69,122,69,-25,-24,69,-35,-26,140,-38,39,39,39,39,-27,-32,-33,-34,-28,-30,-75,39,39,-29,-31,]),'<':([17,19,22,23,37,39,69,71,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,114,117,123,132,136,137,],[-43,-40,51,-42,-41,-44,-44,51,51,51,51,51,51,None,None,-56,-46,None,51,None,-48,-49,-45,None,None,-55,-47,51,51,-64,-63,51,51,51,-65,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruction':([7,26,27,45,68,77,129,130,133,134,148,149,],[24,67,24,24,67,116,141,142,144,145,150,151,]),'break_instr':([7,26,27,45,68,77,129,130,133,134,148,149,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'condition':([46,73,107,],[86,111,131,]),'init':([8,81,85,],[40,121,40,]),'instructions':([7,27,45,],[26,68,26,]),'return_instr':([7,26,27,45,68,77,129,130,133,134,148,149,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'arg':([83,138,],[126,146,]),'assignment':([7,26,27,45,68,77,129,130,133,134,148,149,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'while_instr':([7,26,27,45,68,77,129,130,133,134,148,149,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'expr_list_or_empty':([79,],[118,]),'args_list_or_empty':([83,],[125,]),'inits':([8,85,],[41,41,]),'choice_instr':([7,26,27,45,68,77,129,130,133,134,148,149,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'continue_instr':([7,26,27,45,68,77,129,130,133,134,148,149,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'fundefs':([2,],[3,]),'repeat_instr':([7,26,27,45,68,77,129,130,133,134,148,149,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'declaration':([2,45,],[4,4,]),'program':([0,],[1,]),'print_instr':([7,26,27,45,68,77,129,130,133,134,148,149,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'instructions_opt':([7,45,],[12,84,]),'declarations':([0,14,],[2,45,]),'const':([7,26,27,28,35,38,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,68,73,77,78,79,82,107,110,129,130,133,134,148,149,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'compound_instr':([7,26,27,45,68,77,129,130,133,134,139,148,149,],[18,18,18,18,18,18,18,18,18,18,147,18,18,]),'args_list':([83,],[124,]),'labeled_instr':([7,26,27,45,68,77,129,130,133,134,148,149,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'fundef':([2,3,],[6,9,]),'fundefs_opt':([2,],[7,]),'expression':([7,26,27,28,35,38,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,68,73,77,78,79,82,107,110,129,130,133,134,148,149,],[22,22,22,71,75,76,22,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,22,88,22,117,71,123,88,132,22,22,22,22,22,22,]),'expr_list':([28,79,],[72,120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',39),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',48),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',49),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',58),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',59),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',65),
  ('inits -> init','inits',1,'p_inits','Cparser.py',66),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',76),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',81),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',82),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',90),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',91),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',101),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',102),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',111),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',116),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',117),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',122),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',127),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',132),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',133),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',135),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',143),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',144),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',149),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',154),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',159),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',164),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',169),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',174),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',179),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',180),
  ('const -> STRING','const',1,'p_const','Cparser.py',181),
  ('expression -> const','expression',1,'p_expression','Cparser.py',186),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',187),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',188),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',189),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',190),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',191),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',192),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',193),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',194),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',206),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',207),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',208),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',209),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',223),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',224),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',229),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',230),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',240),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',241),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',246),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',247),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',257),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',262),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',263),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',268),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',269),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',279),
]
