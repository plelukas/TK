
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '71A67A5B9A3CECDC2DC73CF9DEC1940B'
    
_lr_action_items = {'/':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,55,-40,-41,55,-44,55,55,-64,-63,55,55,-48,55,55,55,55,55,-47,-49,55,55,55,55,55,55,55,55,55,55,55,-66,-65,55,]),'%':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,63,-40,-41,63,-44,63,63,-64,-63,63,63,-48,63,63,63,63,63,-47,-49,63,63,63,63,63,63,63,63,63,63,63,-66,-65,63,]),')':([12,19,31,33,44,45,46,50,76,81,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,125,130,131,137,139,147,],[-43,-42,-40,-41,84,85,-44,-68,-70,-77,-64,-63,130,131,-67,132,133,-39,134,135,-48,-53,-59,-56,-54,-62,-47,-49,-50,-52,-60,-45,-58,-57,-61,-55,-46,-51,138,-79,-76,-66,-65,-69,-80,-78,]),'UNTIL':([13,15,16,21,22,24,25,29,34,36,37,47,51,52,58,79,87,117,118,120,129,136,141,142,143,144,145,150,151,],[-13,-15,-22,-16,-21,-14,-18,-17,-12,-19,-20,86,-36,-11,-23,-37,-26,-25,-24,-35,-27,-38,-34,-28,-30,-33,-32,-29,-31,]),'SHR':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,59,-40,-41,59,-44,59,59,-64,-63,59,59,-48,59,59,-56,59,59,-47,-49,59,59,59,-45,59,59,59,-55,-46,59,59,-66,-65,59,]),'AND':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,56,-40,-41,56,-44,56,56,-64,-63,56,56,-48,-53,-59,-56,56,-62,-47,-49,-50,-52,-60,-45,-58,-57,-61,-55,-46,-51,56,-66,-65,56,]),'CONTINUE':([0,1,3,4,5,7,9,11,13,15,16,17,21,22,23,24,25,29,30,34,36,37,47,48,51,52,58,74,79,82,87,117,118,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,20,-73,-5,-13,-15,-22,20,-16,-21,20,-14,-18,-17,-3,-12,-19,-20,20,20,-36,-11,-23,20,-37,-4,-26,-25,-24,-35,-27,20,20,20,20,-38,-34,-28,-30,-33,-32,-75,20,20,-29,-31,]),'ELSE':([13,15,16,21,22,24,25,29,36,37,51,58,79,87,117,118,120,129,136,141,142,143,144,145,150,151,],[-13,-15,-22,-16,-21,-14,-18,-17,-19,-20,-36,-23,-37,-26,-25,-24,-35,-27,-38,-34,148,149,-33,-32,-29,-31,]),'(':([0,1,3,4,5,7,9,11,13,14,15,16,17,18,21,22,23,24,25,26,27,29,30,32,34,35,36,37,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,82,86,87,117,118,119,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,14,-73,-5,-13,14,-15,-22,14,50,-16,-21,14,-14,-18,53,54,-17,-3,14,-12,14,-19,-20,81,81,50,14,14,14,14,-36,-11,14,14,14,14,14,-23,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-37,14,-4,14,-26,-25,-24,14,-35,-27,14,14,14,14,-38,-34,-28,-30,-33,-32,-75,14,14,-29,-31,]),'FLOAT':([0,1,3,4,5,7,9,11,13,14,15,16,17,21,22,23,24,25,29,30,32,34,35,36,37,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,82,86,87,117,118,119,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,33,-73,-5,-13,33,-15,-22,33,-16,-21,33,-14,-18,-17,-3,33,-12,33,-19,-20,33,33,33,33,-36,-11,33,33,33,33,33,-23,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-37,33,-4,33,-26,-25,-24,33,-35,-27,33,33,33,33,-38,-34,-28,-30,-33,-32,-75,33,33,-29,-31,]),'GE':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,61,-40,-41,61,-44,61,61,-64,-63,61,61,-48,61,None,-56,61,None,-47,-49,61,61,None,-45,None,None,None,-55,-46,61,61,-66,-65,61,]),'IF':([0,1,3,4,5,7,9,11,13,15,16,17,21,22,23,24,25,29,30,34,36,37,47,48,51,52,58,74,79,82,87,117,118,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,26,-73,-5,-13,-15,-22,26,-16,-21,26,-14,-18,-17,-3,-12,-19,-20,26,26,-36,-11,-23,26,-37,-4,-26,-25,-24,-35,-27,26,26,26,26,-38,-34,-28,-30,-33,-32,-75,26,26,-29,-31,]),'WHILE':([0,1,3,4,5,7,9,11,13,15,16,17,21,22,23,24,25,29,30,34,36,37,47,48,51,52,58,74,79,82,87,117,118,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,27,-73,-5,-13,-15,-22,27,-16,-21,27,-14,-18,-17,-3,-12,-19,-20,27,27,-36,-11,-23,27,-37,-4,-26,-25,-24,-35,-27,27,27,27,27,-38,-34,-28,-30,-33,-32,-75,27,27,-29,-31,]),'RETURN':([0,1,3,4,5,7,9,11,13,15,16,17,21,22,23,24,25,29,30,34,36,37,47,48,51,52,58,74,79,82,87,117,118,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,35,-73,-5,-13,-15,-22,35,-16,-21,35,-14,-18,-17,-3,-12,-19,-20,35,35,-36,-11,-23,35,-37,-4,-26,-25,-24,-35,-27,35,35,35,35,-38,-34,-28,-30,-33,-32,-75,35,35,-29,-31,]),'NEQ':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,68,-40,-41,68,-44,68,68,-64,-63,68,68,-48,68,None,-56,68,None,-47,-49,68,68,None,-45,None,None,None,-55,-46,68,68,-66,-65,68,]),'LE':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,70,-40,-41,70,-44,70,70,-64,-63,70,70,-48,70,None,-56,70,None,-47,-49,70,70,None,-45,None,None,None,-55,-46,70,70,-66,-65,70,]),'{':([0,1,3,4,5,7,9,11,13,15,16,17,21,22,23,24,25,29,30,34,36,37,47,48,51,52,58,74,79,82,87,117,118,120,129,132,133,134,135,136,138,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,30,-73,-5,-13,-15,-22,30,-16,-21,30,-14,-18,-17,-3,-12,-19,-20,30,30,-36,-11,-23,30,-37,-4,-26,-25,-24,-35,-27,30,30,30,30,-38,30,-34,-28,-30,-33,-32,-75,30,30,-29,-31,]),'TYPE':([0,1,3,4,5,9,11,30,74,81,82,136,140,146,],[-3,8,10,-2,-74,-73,-5,-3,115,124,-4,-38,124,-75,]),'INTEGER':([0,1,3,4,5,7,9,11,13,14,15,16,17,21,22,23,24,25,29,30,32,34,35,36,37,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,82,86,87,117,118,119,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,31,-73,-5,-13,31,-15,-22,31,-16,-21,31,-14,-18,-17,-3,31,-12,31,-19,-20,31,31,31,31,-36,-11,31,31,31,31,31,-23,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-37,31,-4,31,-26,-25,-24,31,-35,-27,31,31,31,31,-38,-34,-28,-30,-33,-32,-75,31,31,-29,-31,]),'PRINT':([0,1,3,4,5,7,9,11,13,15,16,17,21,22,23,24,25,29,30,34,36,37,47,48,51,52,58,74,79,82,87,117,118,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,32,-73,-5,-13,-15,-22,32,-16,-21,32,-14,-18,-17,-3,-12,-19,-20,32,32,-36,-11,-23,32,-37,-4,-26,-25,-24,-35,-27,32,32,32,32,-38,-34,-28,-30,-33,-32,-75,32,32,-29,-31,]),';':([6,12,18,19,20,28,31,33,39,40,42,46,75,76,77,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,126,128,130,131,137,],[11,-43,-44,-42,51,58,-40,-41,79,-7,82,-44,117,-70,118,120,-64,-63,129,-39,-48,-53,-59,-56,-54,-62,-47,-49,-50,-52,-60,-45,-58,-57,-61,-55,-46,-51,-8,-6,141,-66,-65,-69,]),'OR':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,60,-40,-41,60,-44,60,60,-64,-63,60,60,-48,-53,-59,-56,-54,-62,-47,-49,-50,-52,-60,-45,-58,-57,-61,-55,-46,-51,60,-66,-65,60,]),'=':([18,41,127,],[49,80,80,]),'REPEAT':([0,1,3,4,5,7,9,11,13,15,16,17,21,22,23,24,25,29,30,34,36,37,47,48,51,52,58,74,79,82,87,117,118,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,17,-73,-5,-13,-15,-22,17,-16,-21,17,-14,-18,-17,-3,-12,-19,-20,17,17,-36,-11,-23,17,-37,-4,-26,-25,-24,-35,-27,17,17,17,17,-38,-34,-28,-30,-33,-32,-75,17,17,-29,-31,]),'<':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,66,-40,-41,66,-44,66,66,-64,-63,66,66,-48,66,None,-56,66,None,-47,-49,66,66,None,-45,None,None,None,-55,-46,66,66,-66,-65,66,]),'ID':([0,1,3,4,5,7,8,9,10,11,13,14,15,16,17,21,22,23,24,25,29,30,32,34,35,36,37,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,82,83,86,87,115,117,118,119,120,124,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,18,41,-73,43,-5,-13,46,-15,-22,18,-16,-21,18,-14,-18,-17,-3,46,-12,46,-19,-20,18,18,46,46,-36,-11,46,46,46,46,46,-23,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,18,-37,46,-4,127,46,-26,127,-25,-24,46,-35,139,-27,18,18,18,18,-38,-34,-28,-30,-33,-32,-75,18,18,-29,-31,]),'*':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,62,-40,-41,62,-44,62,62,-64,-63,62,62,-48,62,62,62,62,62,-47,-49,62,62,62,62,62,62,62,62,62,62,62,-66,-65,62,]),'$end':([0,1,2,3,4,5,7,9,11,13,15,16,21,22,23,24,25,29,34,36,37,38,51,52,58,79,82,87,117,118,120,129,136,141,142,143,144,145,146,150,151,],[-3,-72,0,-71,-2,-74,-10,-73,-5,-13,-15,-22,-16,-21,-9,-14,-18,-17,-12,-19,-20,-1,-36,-11,-23,-37,-4,-26,-25,-24,-35,-27,-38,-34,-28,-30,-33,-32,-75,-29,-31,]),'SHL':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,71,-40,-41,71,-44,71,71,-64,-63,71,71,-48,71,71,-56,71,71,-47,-49,71,71,71,-45,71,71,71,-55,-46,71,71,-66,-65,71,]),',':([12,19,31,33,40,42,46,76,77,84,85,91,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,123,125,126,130,131,137,139,147,],[-43,-42,-40,-41,-7,83,-44,-70,119,-64,-63,119,-48,-53,-59,-56,-54,-62,-47,-49,-50,-52,-60,-45,-58,-57,-61,-55,-46,-51,-8,-79,140,-6,-66,-65,-69,-80,-78,]),':':([18,],[48,]),'^':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,65,-40,-41,65,-44,65,65,-64,-63,65,65,-48,65,-59,-56,65,-62,-47,-49,65,-52,-60,-45,-58,-57,-61,-55,-46,-51,65,-66,-65,65,]),'STRING':([0,1,3,4,5,7,9,11,13,14,15,16,17,21,22,23,24,25,29,30,32,34,35,36,37,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,82,86,87,117,118,119,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,19,-73,-5,-13,19,-15,-22,19,-16,-21,19,-14,-18,-17,-3,19,-12,19,-19,-20,19,19,19,19,-36,-11,19,19,19,19,19,-23,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-37,19,-4,19,-26,-25,-24,19,-35,-27,19,19,19,19,-38,-34,-28,-30,-33,-32,-75,19,19,-29,-31,]),'>':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,57,-40,-41,57,-44,57,57,-64,-63,57,57,-48,57,None,-56,57,None,-47,-49,57,57,None,-45,None,None,None,-55,-46,57,57,-66,-65,57,]),'error':([0,1,4,11,14,30,32,50,53,54,74,82,],[-3,6,-2,-5,44,-3,75,89,93,95,6,-4,]),'+':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,67,-40,-41,67,-44,67,67,-64,-63,67,67,-48,67,67,67,67,67,-47,-49,67,67,67,-45,67,67,67,67,-46,67,67,-66,-65,67,]),'BREAK':([0,1,3,4,5,7,9,11,13,15,16,17,21,22,23,24,25,29,30,34,36,37,47,48,51,52,58,74,79,82,87,117,118,120,129,132,133,134,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-71,-2,-74,39,-73,-5,-13,-15,-22,39,-16,-21,39,-14,-18,-17,-3,-12,-19,-20,39,39,-36,-11,-23,39,-37,-4,-26,-25,-24,-35,-27,39,39,39,39,-38,-34,-28,-30,-33,-32,-75,39,39,-29,-31,]),'|':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,64,-40,-41,64,-44,64,64,-64,-63,64,64,-48,64,-59,-56,64,-62,-47,-49,-50,-52,-60,-45,-58,-57,-61,-55,-46,-51,64,-66,-65,64,]),'&':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,73,-40,-41,73,-44,73,73,-64,-63,73,73,-48,73,-59,-56,73,-62,-47,-49,73,73,-60,-45,-58,-57,-61,-55,-46,-51,73,-66,-65,73,]),'EQ':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,69,-40,-41,69,-44,69,69,-64,-63,69,69,-48,69,None,-56,69,None,-47,-49,69,69,None,-45,None,None,None,-55,-46,69,69,-66,-65,69,]),'-':([12,18,19,28,31,33,45,46,76,78,84,85,88,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,130,131,137,],[-43,-44,-42,72,-40,-41,72,-44,72,72,-64,-63,72,72,-48,72,72,72,72,72,-47,-49,72,72,72,-45,72,72,72,72,-46,72,72,-66,-65,72,]),'}':([4,11,13,15,16,21,22,23,24,25,29,30,34,36,37,51,52,58,74,79,82,87,116,117,118,120,129,136,141,142,143,144,145,150,151,],[-2,-5,-13,-15,-22,-16,-21,-9,-14,-18,-17,-3,-12,-19,-20,-36,-11,-23,-10,-37,-4,-26,136,-25,-24,-35,-27,-38,-34,-28,-30,-33,-32,-29,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'choice_instr':([7,17,23,47,48,74,132,133,134,135,148,149,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'fundefs':([1,],[3,]),'continue_instr':([7,17,23,47,48,74,132,133,134,135,148,149,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'const':([7,14,17,23,32,35,47,48,49,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,80,86,119,132,133,134,135,148,149,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'instructions':([7,17,74,],[23,47,23,]),'init':([8,83,115,],[40,126,40,]),'declaration':([1,74,],[4,4,]),'program':([0,],[2,]),'labeled_instr':([7,17,23,47,48,74,132,133,134,135,148,149,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'instructions_opt':([7,74,],[38,116,]),'assignment':([7,17,23,47,48,74,132,133,134,135,148,149,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'condition':([53,54,86,],[92,96,128,]),'expression':([7,14,17,23,32,35,47,48,49,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,80,86,119,132,133,134,135,148,149,],[28,45,28,28,76,78,28,28,88,76,94,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,28,121,94,137,28,28,28,28,28,28,]),'fundefs_opt':([1,],[7,]),'args_list_or_empty':([81,],[122,]),'while_instr':([7,17,23,47,48,74,132,133,134,135,148,149,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'print_instr':([7,17,23,47,48,74,132,133,134,135,148,149,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'instruction':([7,17,23,47,48,74,132,133,134,135,148,149,],[34,34,52,52,87,34,142,143,144,145,150,151,]),'fundef':([1,3,],[5,9,]),'return_instr':([7,17,23,47,48,74,132,133,134,135,148,149,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'inits':([8,115,],[42,42,]),'compound_instr':([7,17,23,47,48,74,132,133,134,135,138,148,149,],[16,16,16,16,16,16,16,16,16,16,146,16,16,]),'expr_list_or_empty':([50,],[90,]),'expr_list':([32,50,],[77,91,]),'break_instr':([7,17,23,47,48,74,132,133,134,135,148,149,],[37,37,37,37,37,37,37,37,37,37,37,37,]),'repeat_instr':([7,17,23,47,48,74,132,133,134,135,148,149,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'arg':([81,140,],[123,147,]),'declarations':([0,30,],[1,74,]),'args_list':([81,],[125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',39),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',48),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',49),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',58),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',59),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',65),
  ('inits -> init','inits',1,'p_inits','Cparser.py',66),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',76),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',81),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',82),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',90),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',91),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',101),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',102),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',111),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',116),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',117),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',122),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',127),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',132),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',133),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',135),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',143),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',144),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',149),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',154),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',159),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',164),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',169),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',174),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',179),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',180),
  ('const -> STRING','const',1,'p_const','Cparser.py',181),
  ('expression -> const','expression',1,'p_expression','Cparser.py',186),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',187),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',188),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',189),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',190),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',191),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',192),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',193),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',194),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',206),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',207),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',208),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',209),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',223),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',224),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',229),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',230),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',240),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',241),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',246),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',247),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',257),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',262),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',263),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',268),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',269),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',279),
]
