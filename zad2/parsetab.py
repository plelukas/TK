
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'C26657A32B5D0B6B2A6C2B444E063F95'
    
_lr_action_items = {':':([26,],[77,]),'>':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[49,-41,-42,-44,-43,-40,49,-44,49,49,49,None,None,None,49,-47,49,-46,None,-56,-55,None,49,49,49,-45,-48,-49,None,-63,-64,49,49,49,-66,-65,]),'|':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[53,-41,-42,-44,-43,-40,53,-44,53,53,53,-61,-59,-58,53,-47,-50,-46,-60,-56,-55,-57,-51,53,-52,-45,-48,-49,-62,-63,-64,53,53,53,-66,-65,]),'WHILE':([0,1,3,4,6,8,9,11,16,20,23,25,28,29,30,32,33,34,35,39,41,42,47,57,67,72,75,77,80,82,109,111,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,31,-5,-73,-12,31,31,-17,-21,-18,-19,-20,-16,-22,-3,-14,-13,-15,-4,-23,-36,31,-11,31,31,-37,-25,-24,-26,-35,-27,31,31,-38,31,31,-75,-34,-33,-32,-30,-28,31,31,-31,-29,]),'ELSE':([25,28,29,30,32,33,34,39,41,42,57,67,82,109,111,116,127,133,138,143,144,145,146,147,150,151,],[-17,-21,-18,-19,-20,-16,-22,-14,-13,-15,-23,-36,-37,-25,-24,-26,-35,-27,-38,-34,-33,-32,148,149,-31,-29,]),')':([19,22,27,38,45,68,71,73,74,78,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,118,119,120,121,122,125,126,128,131,134,135,141,],[-41,-42,-43,-40,-77,-70,-44,113,114,-68,-79,-76,130,-61,-59,-58,-54,-47,-50,-46,-60,-56,-55,-57,-51,-53,-52,-45,-48,-49,-62,-63,-64,134,-67,135,-39,136,137,139,140,-80,-69,-66,-65,-78,]),'CONTINUE':([0,1,3,4,6,8,9,11,16,20,23,25,28,29,30,32,33,34,35,39,41,42,47,57,67,72,75,77,80,82,109,111,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,17,-5,-73,-12,17,17,-17,-21,-18,-19,-20,-16,-22,-3,-14,-13,-15,-4,-23,-36,17,-11,17,17,-37,-25,-24,-26,-35,-27,17,17,-38,17,17,-75,-34,-33,-32,-30,-28,17,17,-31,-29,]),'PRINT':([0,1,3,4,6,8,9,11,16,20,23,25,28,29,30,32,33,34,35,39,41,42,47,57,67,72,75,77,80,82,109,111,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,18,-5,-73,-12,18,18,-17,-21,-18,-19,-20,-16,-22,-3,-14,-13,-15,-4,-23,-36,18,-11,18,18,-37,-25,-24,-26,-35,-27,18,18,-38,18,18,-75,-34,-33,-32,-30,-28,18,18,-31,-29,]),'FLOAT':([0,1,3,4,6,8,9,11,16,18,20,21,23,25,28,29,30,32,33,34,35,39,40,41,42,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,75,76,77,78,79,80,81,82,109,110,111,112,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,19,-5,-73,-12,19,19,19,19,-17,-21,-18,-19,-20,-16,-22,-3,-14,19,-13,-15,19,-4,19,19,19,19,19,19,19,19,19,-23,19,19,19,19,19,19,19,19,19,-36,19,-11,19,19,19,19,19,19,-37,-25,19,-24,19,-26,-35,-27,19,19,-38,19,19,-75,-34,-33,-32,-30,-28,19,19,-31,-29,]),'REPEAT':([0,1,3,4,6,8,9,11,16,20,23,25,28,29,30,32,33,34,35,39,41,42,47,57,67,72,75,77,80,82,109,111,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,20,-5,-73,-12,20,20,-17,-21,-18,-19,-20,-16,-22,-3,-14,-13,-15,-4,-23,-36,20,-11,20,20,-37,-25,-24,-26,-35,-27,20,20,-38,20,20,-75,-34,-33,-32,-30,-28,20,20,-31,-29,]),'error':([0,1,3,9,18,21,35,47,78,79,80,81,],[-3,5,-2,-5,69,74,-3,-4,117,121,5,125,]),'LE':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[48,-41,-42,-44,-43,-40,48,-44,48,48,48,None,None,None,48,-47,48,-46,None,-56,-55,None,48,48,48,-45,-48,-49,None,-63,-64,48,48,48,-66,-65,]),'TYPE':([0,1,3,4,6,9,11,35,45,47,80,129,138,142,],[-3,7,-2,-74,10,-5,-73,-3,85,-4,124,85,-38,-75,]),'EQ':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[59,-41,-42,-44,-43,-40,59,-44,59,59,59,None,None,None,59,-47,59,-46,None,-56,-55,None,59,59,59,-45,-48,-49,None,-63,-64,59,59,59,-66,-65,]),'<':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[55,-41,-42,-44,-43,-40,55,-44,55,55,55,None,None,None,55,-47,55,-46,None,-56,-55,None,55,55,55,-45,-48,-49,None,-63,-64,55,55,55,-66,-65,]),'{':([0,1,3,4,6,8,9,11,16,20,23,25,28,29,30,32,33,34,35,39,41,42,47,57,67,72,75,77,80,82,109,111,116,127,130,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,35,-5,-73,-12,35,35,-17,-21,-18,-19,-20,-16,-22,-3,-14,-13,-15,-4,-23,-36,35,-11,35,35,-37,-25,-24,-26,-35,35,-27,35,35,-38,35,35,-75,-34,-33,-32,-30,-28,35,35,-31,-29,]),'IF':([0,1,3,4,6,8,9,11,16,20,23,25,28,29,30,32,33,34,35,39,41,42,47,57,67,72,75,77,80,82,109,111,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,36,-5,-73,-12,36,36,-17,-21,-18,-19,-20,-16,-22,-3,-14,-13,-15,-4,-23,-36,36,-11,36,36,-37,-25,-24,-26,-35,-27,36,36,-38,36,36,-75,-34,-33,-32,-30,-28,36,36,-31,-29,]),'}':([3,9,16,23,25,28,29,30,32,33,34,35,39,41,42,47,57,67,75,80,82,109,111,116,123,127,133,138,143,144,145,146,147,150,151,],[-2,-5,-12,-9,-17,-21,-18,-19,-20,-16,-22,-3,-14,-13,-15,-4,-23,-36,-11,-10,-37,-25,-24,-26,138,-35,-27,-38,-34,-33,-32,-30,-28,-31,-29,]),'/':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[64,-41,-42,-44,-43,-40,64,-44,64,64,64,64,64,64,64,-47,64,64,64,64,64,64,64,64,64,64,-48,-49,64,-63,-64,64,64,64,-66,-65,]),'BREAK':([0,1,3,4,6,8,9,11,16,20,23,25,28,29,30,32,33,34,35,39,41,42,47,57,67,72,75,77,80,82,109,111,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,37,-5,-73,-12,37,37,-17,-21,-18,-19,-20,-16,-22,-3,-14,-13,-15,-4,-23,-36,37,-11,37,37,-37,-25,-24,-26,-35,-27,37,37,-38,37,37,-75,-34,-33,-32,-30,-28,37,37,-31,-29,]),'NEQ':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[50,-41,-42,-44,-43,-40,50,-44,50,50,50,None,None,None,50,-47,50,-46,None,-56,-55,None,50,50,50,-45,-48,-49,None,-63,-64,50,50,50,-66,-65,]),'STRING':([0,1,3,4,6,8,9,11,16,18,20,21,23,25,28,29,30,32,33,34,35,39,40,41,42,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,75,76,77,78,79,80,81,82,109,110,111,112,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,22,-5,-73,-12,22,22,22,22,-17,-21,-18,-19,-20,-16,-22,-3,-14,22,-13,-15,22,-4,22,22,22,22,22,22,22,22,22,-23,22,22,22,22,22,22,22,22,22,-36,22,-11,22,22,22,22,22,22,-37,-25,22,-24,22,-26,-35,-27,22,22,-38,22,22,-75,-34,-33,-32,-30,-28,22,22,-31,-29,]),'+':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[63,-41,-42,-44,-43,-40,63,-44,63,63,63,63,63,63,63,-47,63,-46,63,63,63,63,63,63,63,-45,-48,-49,63,-63,-64,63,63,63,-66,-65,]),'RETURN':([0,1,3,4,6,8,9,11,16,20,23,25,28,29,30,32,33,34,35,39,41,42,47,57,67,72,75,77,80,82,109,111,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,40,-5,-73,-12,40,40,-17,-21,-18,-19,-20,-16,-22,-3,-14,-13,-15,-4,-23,-36,40,-11,40,40,-37,-25,-24,-26,-35,-27,40,40,-38,40,40,-75,-34,-33,-32,-30,-28,40,40,-31,-29,]),'=':([13,26,90,],[44,76,44,]),'GE':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[66,-41,-42,-44,-43,-40,66,-44,66,66,66,None,None,None,66,-47,66,-46,None,-56,-55,None,66,66,66,-45,-48,-49,None,-63,-64,66,66,66,-66,-65,]),'OR':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[51,-41,-42,-44,-43,-40,51,-44,51,51,51,-61,-59,-58,-54,-47,-50,-46,-60,-56,-55,-57,-51,-53,-52,-45,-48,-49,-62,-63,-64,51,51,51,-66,-65,]),'*':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[52,-41,-42,-44,-43,-40,52,-44,52,52,52,52,52,52,52,-47,52,52,52,52,52,52,52,52,52,52,-48,-49,52,-63,-64,52,52,52,-66,-65,]),'INTEGER':([0,1,3,4,6,8,9,11,16,18,20,21,23,25,28,29,30,32,33,34,35,39,40,41,42,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,75,76,77,78,79,80,81,82,109,110,111,112,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,38,-5,-73,-12,38,38,38,38,-17,-21,-18,-19,-20,-16,-22,-3,-14,38,-13,-15,38,-4,38,38,38,38,38,38,38,38,38,-23,38,38,38,38,38,38,38,38,38,-36,38,-11,38,38,38,38,38,38,-37,-25,38,-24,38,-26,-35,-27,38,38,-38,38,38,-75,-34,-33,-32,-30,-28,38,38,-31,-29,]),'ID':([0,1,3,4,6,7,8,9,10,11,16,18,20,21,23,25,28,29,30,32,33,34,35,39,40,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,75,76,77,78,79,80,81,82,85,109,110,111,112,116,124,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,13,26,-5,43,-73,-12,71,26,71,26,-17,-21,-18,-19,-20,-16,-22,-3,-14,71,-13,-15,71,90,-4,71,71,71,71,71,71,71,71,71,-23,71,71,71,71,71,71,71,71,71,-36,26,-11,71,26,71,71,26,71,-37,128,-25,71,-24,71,-26,90,-35,-27,26,26,-38,26,26,-75,-34,-33,-32,-30,-28,26,26,-31,-29,]),'(':([0,1,3,4,6,8,9,11,13,16,18,20,21,23,25,26,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,78,79,80,81,82,109,110,111,112,116,127,133,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,-74,-71,21,-5,-73,45,-12,21,21,21,21,-17,78,-21,-18,-19,79,-20,-16,-22,-3,81,-14,21,-13,-15,45,21,-4,21,21,21,21,21,21,21,21,21,-23,21,21,21,21,21,21,21,21,21,-36,78,21,-11,21,21,21,21,21,21,-37,-25,21,-24,21,-26,-35,-27,21,21,-38,21,21,-75,-34,-33,-32,-30,-28,21,21,-31,-29,]),',':([12,14,19,22,27,38,68,70,71,84,86,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,118,128,131,134,135,141,],[-7,46,-41,-42,-43,-40,-70,110,-44,-8,-79,129,-6,-61,-59,-58,-54,-47,-50,-46,-60,-56,-55,-57,-51,-53,-52,-45,-48,-49,-62,-63,-64,110,-80,-69,-66,-65,-78,]),'SHR':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[56,-41,-42,-44,-43,-40,56,-44,56,56,56,56,56,56,56,-47,56,-46,56,-56,-55,56,56,56,56,-45,-48,-49,56,-63,-64,56,56,56,-66,-65,]),';':([5,12,14,15,17,19,22,26,27,37,38,68,69,70,71,83,84,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,132,134,135,],[9,-7,47,57,67,-41,-42,-44,-43,82,-40,-70,109,111,-44,127,-8,-6,-61,-59,-58,-54,-47,-50,-46,-60,-56,-55,-57,-51,-53,-52,-45,-48,-49,-62,-63,-64,133,-39,-69,143,-66,-65,]),'$end':([0,1,2,3,4,6,8,9,11,16,23,24,25,28,29,30,32,33,34,39,41,42,47,57,67,75,82,109,111,116,127,133,138,142,143,144,145,146,147,150,151,],[-3,-72,0,-2,-74,-71,-10,-5,-73,-12,-9,-1,-17,-21,-18,-19,-20,-16,-22,-14,-13,-15,-4,-23,-36,-11,-37,-25,-24,-26,-35,-27,-38,-75,-34,-33,-32,-30,-28,-31,-29,]),'&':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[60,-41,-42,-44,-43,-40,60,-44,60,60,60,-61,-59,-58,60,-47,60,-46,-60,-56,-55,-57,-51,60,60,-45,-48,-49,-62,-63,-64,60,60,60,-66,-65,]),'AND':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[61,-41,-42,-44,-43,-40,61,-44,61,61,61,-61,-59,-58,61,-47,-50,-46,-60,-56,-55,-57,-51,-53,-52,-45,-48,-49,-62,-63,-64,61,61,61,-66,-65,]),'^':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[62,-41,-42,-44,-43,-40,62,-44,62,62,62,-61,-59,-58,62,-47,62,-46,-60,-56,-55,-57,-51,62,-52,-45,-48,-49,-62,-63,-64,62,62,62,-66,-65,]),'UNTIL':([16,25,28,29,30,32,33,34,39,41,42,57,67,72,75,82,109,111,116,127,133,138,143,144,145,146,147,150,151,],[-12,-17,-21,-18,-19,-20,-16,-22,-14,-13,-15,-23,-36,112,-11,-37,-25,-24,-26,-35,-27,-38,-34,-33,-32,-30,-28,-31,-29,]),'-':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[54,-41,-42,-44,-43,-40,54,-44,54,54,54,54,54,54,54,-47,54,-46,54,54,54,54,54,54,54,-45,-48,-49,54,-63,-64,54,54,54,-66,-65,]),'%':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[65,-41,-42,-44,-43,-40,65,-44,65,65,65,65,65,65,65,-47,65,65,65,65,65,65,65,65,65,65,-48,-49,65,-63,-64,65,65,65,-66,-65,]),'SHL':([15,19,22,26,27,38,68,71,73,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,120,131,134,135,],[58,-41,-42,-44,-43,-40,58,-44,58,58,58,58,58,58,58,-47,58,-46,58,-56,-55,58,58,58,58,-45,-48,-49,58,-63,-64,58,58,58,-66,-65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'continue_instr':([8,20,23,72,77,80,136,137,139,140,148,149,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'repeat_instr':([8,20,23,72,77,80,136,137,139,140,148,149,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'return_instr':([8,20,23,72,77,80,136,137,139,140,148,149,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'expression':([8,18,20,21,23,40,44,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,72,76,77,78,79,80,81,110,112,136,137,139,140,148,149,],[15,68,15,73,15,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,15,115,15,68,120,15,120,131,120,15,15,15,15,15,15,]),'break_instr':([8,20,23,72,77,80,136,137,139,140,148,149,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'const':([8,18,20,21,23,40,44,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,72,76,77,78,79,80,81,110,112,136,137,139,140,148,149,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expr_list':([18,78,],[70,118,]),'fundef':([1,6,],[4,11,]),'fundefs':([1,],[6,]),'choice_instr':([8,20,23,72,77,80,136,137,139,140,148,149,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'compound_instr':([8,20,23,72,77,80,130,136,137,139,140,148,149,],[34,34,34,34,34,34,142,34,34,34,34,34,34,]),'print_instr':([8,20,23,72,77,80,136,137,139,140,148,149,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'instructions_opt':([8,80,],[24,123,]),'labeled_instr':([8,20,23,72,77,80,136,137,139,140,148,149,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'args_list':([45,],[87,]),'instructions':([8,20,80,],[23,72,23,]),'program':([0,],[2,]),'arg':([45,129,],[86,141,]),'instruction':([8,20,23,72,77,80,136,137,139,140,148,149,],[16,16,75,75,116,16,144,145,146,147,150,151,]),'declaration':([1,80,],[3,3,]),'fundefs_opt':([1,],[8,]),'assignment':([8,20,23,72,77,80,136,137,139,140,148,149,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'expr_list_or_empty':([78,],[119,]),'condition':([79,81,112,],[122,126,132,]),'init':([7,46,124,],[12,89,12,]),'inits':([7,124,],[14,14,]),'declarations':([0,35,],[1,80,]),'args_list_or_empty':([45,],[88,]),'while_instr':([8,20,23,72,77,80,136,137,139,140,148,149,],[25,25,25,25,25,25,25,25,25,25,25,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',39),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',43),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',44),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',48),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',49),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',53),
  ('inits -> init','inits',1,'p_inits','Cparser.py',54),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',58),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',62),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',63),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',67),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',68),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',72),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',73),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',74),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',75),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',76),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',77),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',78),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',79),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',80),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',81),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',82),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',86),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',87),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',91),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',95),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',99),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',100),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',101),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',102),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',106),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',107),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',111),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',115),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',119),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',123),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',127),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',131),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',135),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',136),
  ('const -> STRING','const',1,'p_const','Cparser.py',137),
  ('expression -> const','expression',1,'p_expression','Cparser.py',141),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',142),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',143),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',144),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',145),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',146),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',147),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',148),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',149),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',150),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',151),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',152),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',153),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',154),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',155),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',156),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',157),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',158),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',159),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',160),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',161),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',162),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',163),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',164),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',168),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',169),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',173),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',174),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',178),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',179),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',182),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',183),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',187),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',191),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',192),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',195),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',196),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',199),
]
