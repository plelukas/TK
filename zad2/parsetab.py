
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '52DACF8B5DFBC17F9EBCB0A12FD537FC'
    
_lr_action_items = {'LE':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,54,-43,-44,54,-44,54,54,-63,-64,54,None,-45,-48,-55,None,54,None,None,54,None,None,54,-47,54,-56,-46,54,-49,54,54,54,-65,-66,]),'RETURN':([0,1,3,4,5,8,10,11,13,14,16,19,20,23,26,28,32,33,35,36,37,39,46,48,53,66,73,74,78,83,92,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,21,-71,-2,-17,-20,-16,-3,21,-21,-14,-18,-19,21,-15,-12,-22,-13,-73,-5,21,21,-37,-23,-11,21,-36,-4,-24,-25,-35,-26,-38,21,21,-27,21,21,-32,-33,-34,-28,-30,-75,21,21,-29,-31,]),'BREAK':([0,1,3,4,5,8,10,11,13,14,16,19,20,23,26,28,32,33,35,36,37,39,46,48,53,66,73,74,78,83,92,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,22,-71,-2,-17,-20,-16,-3,22,-21,-14,-18,-19,22,-15,-12,-22,-13,-73,-5,22,22,-37,-23,-11,22,-36,-4,-24,-25,-35,-26,-38,22,22,-27,22,22,-32,-33,-34,-28,-30,-75,22,22,-29,-31,]),'SHL':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,57,-43,-44,57,-44,57,57,-63,-64,57,57,-45,-48,-55,57,57,57,57,57,57,57,57,-47,57,-56,-46,57,-49,57,57,57,-65,-66,]),'&':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,71,-43,-44,71,-44,71,71,-63,-64,71,-61,-45,-48,-55,-57,71,-58,-59,71,-60,-62,71,-47,71,-56,-46,-51,-49,71,71,71,-65,-66,]),'SHR':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,69,-43,-44,69,-44,69,69,-63,-64,69,69,-45,-48,-55,69,69,69,69,69,69,69,69,-47,69,-56,-46,69,-49,69,69,69,-65,-66,]),',':([9,18,24,27,41,42,44,49,50,84,85,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,121,123,125,127,132,133,134,140,147,],[-42,-41,-40,-43,-7,82,-44,-70,93,-63,-64,-61,-45,-48,-55,-57,-54,-58,-59,-52,-60,-62,-53,-47,-50,-56,-46,-51,-49,93,-79,139,-8,-6,-69,-65,-66,-80,-78,]),'$end':([0,1,2,3,4,5,8,10,11,13,19,20,23,26,28,30,32,33,35,36,37,39,53,66,73,78,83,92,94,95,114,128,135,141,142,143,144,145,146,150,151,],[-3,-72,0,-74,-10,-71,-2,-17,-20,-16,-21,-14,-18,-19,-9,-1,-15,-12,-22,-13,-73,-5,-37,-23,-11,-36,-4,-24,-25,-35,-26,-38,-27,-32,-33,-34,-28,-30,-75,-29,-31,]),'/':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,56,-43,-44,56,-44,56,56,-63,-64,56,56,56,-48,56,56,56,56,56,56,56,56,56,-47,56,56,56,56,-49,56,56,56,-65,-66,]),'{':([0,1,3,4,5,8,10,11,13,14,16,19,20,23,26,28,32,33,35,36,37,39,46,48,53,66,73,74,78,83,92,94,95,114,128,129,130,135,136,137,138,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,14,-71,-2,-17,-20,-16,-3,14,-21,-14,-18,-19,14,-15,-12,-22,-13,-73,-5,14,14,-37,-23,-11,14,-36,-4,-24,-25,-35,-26,-38,14,14,-27,14,14,14,-32,-33,-34,-28,-30,-75,14,14,-29,-31,]),':':([29,],[74,]),'<':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,63,-43,-44,63,-44,63,63,-63,-64,63,None,-45,-48,-55,None,63,None,None,63,None,None,63,-47,63,-56,-46,63,-49,63,63,63,-65,-66,]),'GE':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,64,-43,-44,64,-44,64,64,-63,-64,64,None,-45,-48,-55,None,64,None,None,64,None,None,64,-47,64,-56,-46,64,-49,64,64,64,-65,-66,]),'WHILE':([0,1,3,4,5,8,10,11,13,14,16,19,20,23,26,28,32,33,35,36,37,39,46,48,53,66,73,74,78,83,92,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,15,-71,-2,-17,-20,-16,-3,15,-21,-14,-18,-19,15,-15,-12,-22,-13,-73,-5,15,15,-37,-23,-11,15,-36,-4,-24,-25,-35,-26,-38,15,15,-27,15,15,-32,-33,-34,-28,-30,-75,15,15,-29,-31,]),'INTEGER':([0,1,3,4,5,8,10,11,12,13,14,16,17,19,20,21,23,26,28,32,33,35,36,37,39,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,83,91,92,93,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,24,-71,-2,-17,-20,24,-16,-3,24,24,-21,-14,24,-18,-19,24,-15,-12,-22,-13,-73,-5,24,24,24,-37,24,24,24,24,24,24,24,24,24,24,24,24,-23,24,24,24,24,24,24,-11,24,24,24,24,-36,24,-4,24,-24,24,-25,-35,-26,-38,24,24,-27,24,24,-32,-33,-34,-28,-30,-75,24,24,-29,-31,]),';':([6,9,18,22,24,25,27,29,34,41,42,44,49,50,51,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,127,131,132,133,134,],[39,-42,-41,53,-40,66,-43,-44,78,-7,83,-44,-70,92,94,95,-63,-64,-39,-61,-45,-48,-55,-57,-54,-58,-59,-52,-60,-62,-53,-47,-50,-56,-46,-51,-49,135,-8,-6,143,-69,-65,-66,]),')':([9,18,24,27,43,44,45,49,75,80,84,85,88,89,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,119,120,121,122,123,132,133,134,140,147,],[-42,-41,-40,-43,84,-44,85,-70,-68,-77,-63,-64,-39,129,130,-61,-45,-48,-55,-57,-54,-58,-59,-52,-60,-62,-53,-47,-50,-56,-46,-51,-49,133,-67,134,136,137,-79,138,-76,-69,-65,-66,-80,-78,]),'REPEAT':([0,1,3,4,5,8,10,11,13,14,16,19,20,23,26,28,32,33,35,36,37,39,46,48,53,66,73,74,78,83,92,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,16,-71,-2,-17,-20,-16,-3,16,-21,-14,-18,-19,16,-15,-12,-22,-13,-73,-5,16,16,-37,-23,-11,16,-36,-4,-24,-25,-35,-26,-38,16,16,-27,16,16,-32,-33,-34,-28,-30,-75,16,16,-29,-31,]),'|':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,68,-43,-44,68,-44,68,68,-63,-64,68,-61,-45,-48,-55,-57,68,-58,-59,-52,-60,-62,68,-47,-50,-56,-46,-51,-49,68,68,68,-65,-66,]),'EQ':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,58,-43,-44,58,-44,58,58,-63,-64,58,None,-45,-48,-55,None,58,None,None,58,None,None,58,-47,58,-56,-46,58,-49,58,58,58,-65,-66,]),'PRINT':([0,1,3,4,5,8,10,11,13,14,16,19,20,23,26,28,32,33,35,36,37,39,46,48,53,66,73,74,78,83,92,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,17,-71,-2,-17,-20,-16,-3,17,-21,-14,-18,-19,17,-15,-12,-22,-13,-73,-5,17,17,-37,-23,-11,17,-36,-4,-24,-25,-35,-26,-38,17,17,-27,17,17,-32,-33,-34,-28,-30,-75,17,17,-29,-31,]),'+':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,55,-43,-44,55,-44,55,55,-63,-64,55,55,-45,-48,55,55,55,55,55,55,55,55,55,-47,55,55,-46,55,-49,55,55,55,-65,-66,]),'ID':([0,1,3,4,5,7,8,10,11,12,13,14,16,17,19,20,21,23,26,28,32,33,35,36,37,38,39,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,86,91,92,93,94,95,114,124,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,29,-71,40,-2,-17,-20,44,-16,-3,29,44,-21,-14,44,-18,-19,29,-15,-12,-22,-13,-73,79,-5,29,44,29,-37,44,44,44,44,44,44,44,44,44,44,44,44,-23,44,44,44,44,44,44,-11,29,44,44,44,-36,44,126,-4,126,44,-24,44,-25,-35,-26,140,-38,29,29,-27,29,29,-32,-33,-34,-28,-30,-75,29,29,-29,-31,]),'FLOAT':([0,1,3,4,5,8,10,11,12,13,14,16,17,19,20,21,23,26,28,32,33,35,36,37,39,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,83,91,92,93,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,18,-71,-2,-17,-20,18,-16,-3,18,18,-21,-14,18,-18,-19,18,-15,-12,-22,-13,-73,-5,18,18,18,-37,18,18,18,18,18,18,18,18,18,18,18,18,-23,18,18,18,18,18,18,-11,18,18,18,18,-36,18,-4,18,-24,18,-25,-35,-26,-38,18,18,-27,18,18,-32,-33,-34,-28,-30,-75,18,18,-29,-31,]),'IF':([0,1,3,4,5,8,10,11,13,14,16,19,20,23,26,28,32,33,35,36,37,39,46,48,53,66,73,74,78,83,92,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,31,-71,-2,-17,-20,-16,-3,31,-21,-14,-18,-19,31,-15,-12,-22,-13,-73,-5,31,31,-37,-23,-11,31,-36,-4,-24,-25,-35,-26,-38,31,31,-27,31,31,-32,-33,-34,-28,-30,-75,31,31,-29,-31,]),'OR':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,59,-43,-44,59,-44,59,59,-63,-64,59,-61,-45,-48,-55,-57,-54,-58,-59,-52,-60,-62,-53,-47,-50,-56,-46,-51,-49,59,59,59,-65,-66,]),'-':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,70,-43,-44,70,-44,70,70,-63,-64,70,70,-45,-48,70,70,70,70,70,70,70,70,70,-47,70,70,-46,70,-49,70,70,70,-65,-66,]),'ELSE':([10,11,13,19,20,23,26,32,35,36,53,66,78,92,94,95,114,128,135,141,142,143,144,145,150,151,],[-17,-20,-16,-21,-14,-18,-19,-15,-22,-13,-37,-23,-36,-24,-25,-35,-26,-38,-27,-32,-33,-34,148,149,-29,-31,]),'STRING':([0,1,3,4,5,8,10,11,12,13,14,16,17,19,20,21,23,26,28,32,33,35,36,37,39,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,83,91,92,93,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,9,-71,-2,-17,-20,9,-16,-3,9,9,-21,-14,9,-18,-19,9,-15,-12,-22,-13,-73,-5,9,9,9,-37,9,9,9,9,9,9,9,9,9,9,9,9,-23,9,9,9,9,9,9,-11,9,9,9,9,-36,9,-4,9,-24,9,-25,-35,-26,-38,9,9,-27,9,9,-32,-33,-34,-28,-30,-75,9,9,-29,-31,]),'=':([29,40,126,],[76,81,81,]),'UNTIL':([10,11,13,19,20,23,26,32,33,35,36,48,53,66,73,78,92,94,95,114,128,135,141,142,143,144,145,150,151,],[-17,-20,-16,-21,-14,-18,-19,-15,-12,-22,-13,91,-37,-23,-11,-36,-24,-25,-35,-26,-38,-27,-32,-33,-34,-28,-30,-29,-31,]),'>':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,61,-43,-44,61,-44,61,61,-63,-64,61,None,-45,-48,-55,None,61,None,None,61,None,None,61,-47,61,-56,-46,61,-49,61,61,61,-65,-66,]),'^':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,62,-43,-44,62,-44,62,62,-63,-64,62,-61,-45,-48,-55,-57,62,-58,-59,-52,-60,-62,62,-47,62,-56,-46,-51,-49,62,62,62,-65,-66,]),'(':([0,1,3,4,5,8,10,11,12,13,14,15,16,17,19,20,21,23,26,28,29,31,32,33,35,36,37,39,40,44,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,91,92,93,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,12,-71,-2,-17,-20,12,-16,-3,47,12,12,-21,-14,12,-18,-19,12,75,77,-15,-12,-22,-13,-73,-5,80,75,12,12,12,-37,12,12,12,12,12,12,12,12,12,12,12,12,-23,12,12,12,12,12,12,-11,12,12,12,12,-36,80,12,-4,12,-24,12,-25,-35,-26,-38,12,12,-27,12,12,-32,-33,-34,-28,-30,-75,12,12,-29,-31,]),'AND':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,65,-43,-44,65,-44,65,65,-63,-64,65,-61,-45,-48,-55,-57,65,-58,-59,-52,-60,-62,-53,-47,-50,-56,-46,-51,-49,65,65,65,-65,-66,]),'}':([8,10,11,13,14,19,20,23,26,28,32,33,35,36,39,46,53,66,73,78,83,87,92,94,95,114,128,135,141,142,143,144,145,150,151,],[-2,-17,-20,-16,-3,-21,-14,-18,-19,-9,-15,-12,-22,-13,-5,-10,-37,-23,-11,-36,-4,128,-24,-25,-35,-26,-38,-27,-32,-33,-34,-28,-30,-29,-31,]),'CONTINUE':([0,1,3,4,5,8,10,11,13,14,16,19,20,23,26,28,32,33,35,36,37,39,46,48,53,66,73,74,78,83,92,94,95,114,128,129,130,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-74,34,-71,-2,-17,-20,-16,-3,34,-21,-14,-18,-19,34,-15,-12,-22,-13,-73,-5,34,34,-37,-23,-11,34,-36,-4,-24,-25,-35,-26,-38,34,34,-27,34,34,-32,-33,-34,-28,-30,-75,34,34,-29,-31,]),'error':([0,1,8,12,14,17,39,46,47,75,77,83,],[-3,6,-2,45,-3,51,-5,6,90,117,120,-4,]),'*':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,67,-43,-44,67,-44,67,67,-63,-64,67,67,67,-48,67,67,67,67,67,67,67,67,67,-47,67,67,67,67,-49,67,67,67,-65,-66,]),'NEQ':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,60,-43,-44,60,-44,60,60,-63,-64,60,None,-45,-48,-55,None,60,None,None,60,None,None,60,-47,60,-56,-46,60,-49,60,60,60,-65,-66,]),'TYPE':([0,1,3,5,8,14,37,39,46,80,83,128,139,146,],[-3,7,-74,38,-2,-3,-73,-5,86,124,-4,-38,124,-75,]),'%':([9,18,24,25,27,29,43,44,49,52,84,85,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,125,132,133,134,],[-42,-41,-40,72,-43,-44,72,-44,72,72,-63,-64,72,72,72,-48,72,72,72,72,72,72,72,72,72,-47,72,72,72,72,-49,72,72,72,-65,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'labeled_instr':([4,16,28,46,48,74,129,130,136,137,148,149,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'init':([7,82,86,],[41,127,41,]),'while_instr':([4,16,28,46,48,74,129,130,136,137,148,149,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'break_instr':([4,16,28,46,48,74,129,130,136,137,148,149,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'choice_instr':([4,16,28,46,48,74,129,130,136,137,148,149,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'expr_list_or_empty':([75,],[115,]),'arg':([80,139,],[121,147,]),'fundefs':([1,],[5,]),'expression':([4,12,16,17,21,28,46,47,48,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,74,75,76,77,81,91,93,129,130,136,137,148,149,],[25,43,25,49,52,25,25,88,25,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,25,49,118,88,125,88,132,25,25,25,25,25,25,]),'program':([0,],[2,]),'args_list':([80,],[123,]),'expr_list':([17,75,],[50,116,]),'const':([4,12,16,17,21,28,46,47,48,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,74,75,76,77,81,91,93,129,130,136,137,148,149,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'instructions':([4,16,46,],[28,48,28,]),'condition':([47,77,91,],[89,119,131,]),'repeat_instr':([4,16,28,46,48,74,129,130,136,137,148,149,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'instructions_opt':([4,46,],[30,87,]),'inits':([7,86,],[42,42,]),'fundef':([1,5,],[3,37,]),'assignment':([4,16,28,46,48,74,129,130,136,137,148,149,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'instruction':([4,16,28,46,48,74,129,130,136,137,148,149,],[33,33,73,33,73,114,141,142,144,145,150,151,]),'continue_instr':([4,16,28,46,48,74,129,130,136,137,148,149,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'fundefs_opt':([1,],[4,]),'args_list_or_empty':([80,],[122,]),'return_instr':([4,16,28,46,48,74,129,130,136,137,148,149,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'compound_instr':([4,16,28,46,48,74,129,130,136,137,138,148,149,],[35,35,35,35,35,35,35,35,35,35,146,35,35,]),'print_instr':([4,16,28,46,48,74,129,130,136,137,148,149,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'declarations':([0,14,],[1,46,]),'declaration':([1,46,],[8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',39),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',49),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',50),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',59),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',60),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',66),
  ('inits -> init','inits',1,'p_inits','Cparser.py',67),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',77),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',82),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',83),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',91),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',92),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',102),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',112),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',117),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',118),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',123),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',128),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',133),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',135),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',136),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',144),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',145),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',150),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',155),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',160),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',165),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',170),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',175),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',180),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',181),
  ('const -> STRING','const',1,'p_const','Cparser.py',182),
  ('expression -> const','expression',1,'p_expression','Cparser.py',187),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',188),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',189),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',190),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',191),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',192),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',193),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',194),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',207),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',208),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',209),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',210),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',224),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',225),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',230),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',231),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',241),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',242),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',247),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',248),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',258),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',263),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',264),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',269),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',270),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',280),
]
