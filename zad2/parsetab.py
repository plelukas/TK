
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'C9B337756E1078A52FF78055DDB43D49'
    
_lr_action_items = {'INTEGER':([0,2,3,4,7,8,10,11,15,17,18,19,20,23,24,27,28,29,31,32,33,34,35,37,41,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,92,119,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,9,-74,-71,-2,9,-12,-13,-3,-22,-17,-16,9,-18,9,-19,-20,9,-21,9,-14,-15,-5,-73,-36,9,9,9,9,9,-37,9,9,9,9,9,9,9,9,9,9,9,9,-23,9,9,9,9,9,9,9,9,-11,-4,9,-25,-24,9,-26,9,-35,9,9,-38,-27,9,9,-28,-30,-32,-33,-34,-75,9,9,-29,-31,]),'PRINT':([0,2,3,4,7,8,11,15,17,18,19,20,24,27,28,29,31,32,34,35,37,41,47,49,50,53,68,76,77,80,84,85,92,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,10,-74,-71,-2,-12,-13,-3,-22,-17,-16,-18,10,-19,-20,10,-21,-14,-15,-5,-73,-36,10,10,-37,-23,10,-11,-4,-25,-24,-26,-35,10,10,-38,-27,10,10,-28,-30,-32,-33,-34,-75,10,10,-29,-31,]),'=':([21,40,121,],[51,81,81,]),'/':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,59,-42,-43,-44,59,59,59,59,59,-63,-64,59,59,-48,-49,59,59,59,59,59,59,59,59,59,59,-47,59,59,59,59,59,-65,-66,]),')':([9,16,30,36,45,46,52,54,55,82,87,88,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,124,125,126,128,133,134,140,147,],[-40,-41,-42,-43,-44,-70,-68,97,98,-77,129,130,-39,133,134,-67,-63,-64,135,136,-53,-57,-48,-49,-46,-60,-50,-54,-51,-62,-45,-56,-55,-52,-47,-61,-59,-58,-79,138,-76,-69,-65,-66,-80,-78,]),'+':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,67,-42,-43,-44,67,67,67,67,67,-63,-64,67,67,-48,-49,-46,67,67,67,67,67,-45,67,67,67,-47,67,67,67,67,67,-65,-66,]),'^':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,71,-42,-43,-44,71,71,71,71,71,-63,-64,71,-57,-48,-49,-46,-60,71,71,-51,-62,-45,-56,-55,-52,-47,-61,-59,-58,71,71,-65,-66,]),'%':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,60,-42,-43,-44,60,60,60,60,60,-63,-64,60,60,-48,-49,60,60,60,60,60,60,60,60,60,60,-47,60,60,60,60,60,-65,-66,]),'TYPE':([0,2,4,7,8,17,37,41,49,80,82,131,139,146,],[-3,6,-74,42,-2,-3,-5,-73,90,-4,127,-38,127,-75,]),'&':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,65,-42,-43,-44,65,65,65,65,65,-63,-64,65,-57,-48,-49,-46,-60,65,65,-51,-62,-45,-56,-55,65,-47,-61,-59,-58,65,65,-65,-66,]),'WHILE':([0,2,3,4,7,8,11,15,17,18,19,20,24,27,28,29,31,32,34,35,37,41,47,49,50,53,68,76,77,80,84,85,92,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,25,-74,-71,-2,-12,-13,-3,-22,-17,-16,-18,25,-19,-20,25,-21,-14,-15,-5,-73,-36,25,25,-37,-23,25,-11,-4,-25,-24,-26,-35,25,25,-38,-27,25,25,-28,-30,-32,-33,-34,-75,25,25,-29,-31,]),'CONTINUE':([0,2,3,4,7,8,11,15,17,18,19,20,24,27,28,29,31,32,34,35,37,41,47,49,50,53,68,76,77,80,84,85,92,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,13,-74,-71,-2,-12,-13,-3,-22,-17,-16,-18,13,-19,-20,13,-21,-14,-15,-5,-73,-36,13,13,-37,-23,13,-11,-4,-25,-24,-26,-35,13,13,-38,-27,13,13,-28,-30,-32,-33,-34,-75,13,13,-29,-31,]),'UNTIL':([11,15,18,19,20,24,28,29,32,34,35,47,53,68,76,77,84,85,92,120,131,132,141,142,143,144,145,150,151,],[-12,-13,-22,-17,-16,-18,-19,-20,-21,-14,-15,-36,-37,-23,119,-11,-25,-24,-26,-35,-38,-27,-28,-30,-32,-33,-34,-29,-31,]),'IF':([0,2,3,4,7,8,11,15,17,18,19,20,24,27,28,29,31,32,34,35,37,41,47,49,50,53,68,76,77,80,84,85,92,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,14,-74,-71,-2,-12,-13,-3,-22,-17,-16,-18,14,-19,-20,14,-21,-14,-15,-5,-73,-36,14,14,-37,-23,14,-11,-4,-25,-24,-26,-35,14,14,-38,-27,14,14,-28,-30,-32,-33,-34,-75,14,14,-29,-31,]),',':([9,16,30,36,38,39,44,45,46,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,126,128,133,134,140,147,],[-40,-41,-42,-43,-7,79,86,-44,-70,86,-63,-64,-53,-57,-48,-49,-46,-60,-50,-54,-51,-62,-45,-56,-55,-52,-47,-61,-59,-58,-6,-8,-79,139,-69,-65,-66,-80,-78,]),'REPEAT':([0,2,3,4,7,8,11,15,17,18,19,20,24,27,28,29,31,32,34,35,37,41,47,49,50,53,68,76,77,80,84,85,92,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,27,-74,-71,-2,-12,-13,-3,-22,-17,-16,-18,27,-19,-20,27,-21,-14,-15,-5,-73,-36,27,27,-37,-23,27,-11,-4,-25,-24,-26,-35,27,27,-38,-27,27,27,-28,-30,-32,-33,-34,-75,27,27,-29,-31,]),'LE':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,73,-42,-43,-44,73,73,73,73,73,-63,-64,73,None,-48,-49,-46,None,73,73,73,None,-45,-56,-55,73,-47,None,None,None,73,73,-65,-66,]),'FLOAT':([0,2,3,4,7,8,10,11,15,17,18,19,20,23,24,27,28,29,31,32,33,34,35,37,41,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,92,119,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,16,-74,-71,-2,16,-12,-13,-3,-22,-17,-16,16,-18,16,-19,-20,16,-21,16,-14,-15,-5,-73,-36,16,16,16,16,16,-37,16,16,16,16,16,16,16,16,16,16,16,16,-23,16,16,16,16,16,16,16,16,-11,-4,16,-25,-24,16,-26,16,-35,16,16,-38,-27,16,16,-28,-30,-32,-33,-34,-75,16,16,-29,-31,]),'{':([0,2,3,4,7,8,11,15,17,18,19,20,24,27,28,29,31,32,34,35,37,41,47,49,50,53,68,76,77,80,84,85,92,120,129,130,131,132,135,136,138,141,142,143,144,145,146,148,149,150,151,],[-3,-72,17,-74,-71,-2,-12,-13,-3,-22,-17,-16,-18,17,-19,-20,17,-21,-14,-15,-5,-73,-36,17,17,-37,-23,17,-11,-4,-25,-24,-26,-35,17,17,-38,-27,17,17,17,-28,-30,-32,-33,-34,-75,17,17,-29,-31,]),'STRING':([0,2,3,4,7,8,10,11,15,17,18,19,20,23,24,27,28,29,31,32,33,34,35,37,41,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,84,85,86,92,119,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,30,-74,-71,-2,30,-12,-13,-3,-22,-17,-16,30,-18,30,-19,-20,30,-21,30,-14,-15,-5,-73,-36,30,30,30,30,30,-37,30,30,30,30,30,30,30,30,30,30,30,30,-23,30,30,30,30,30,30,30,30,-11,-4,30,-25,-24,30,-26,30,-35,30,30,-38,-27,30,30,-28,-30,-32,-33,-34,-75,30,30,-29,-31,]),'-':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,61,-42,-43,-44,61,61,61,61,61,-63,-64,61,61,-48,-49,-46,61,61,61,61,61,-45,61,61,61,-47,61,61,61,61,61,-65,-66,]),'$end':([0,1,2,3,4,7,8,11,12,15,18,19,20,24,28,29,31,32,34,35,37,41,47,53,68,77,80,84,85,92,120,131,132,141,142,143,144,145,146,150,151,],[-3,0,-72,-10,-74,-71,-2,-12,-1,-13,-22,-17,-16,-18,-19,-20,-9,-21,-14,-15,-5,-73,-36,-37,-23,-11,-4,-25,-24,-26,-35,-38,-27,-28,-30,-32,-33,-34,-75,-29,-31,]),'EQ':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,58,-42,-43,-44,58,58,58,58,58,-63,-64,58,None,-48,-49,-46,None,58,58,58,None,-45,-56,-55,58,-47,None,None,None,58,58,-65,-66,]),'SHL':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,70,-42,-43,-44,70,70,70,70,70,-63,-64,70,70,-48,-49,-46,70,70,70,70,70,-45,-56,-55,70,-47,70,70,70,70,70,-65,-66,]),'<':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,62,-42,-43,-44,62,62,62,62,62,-63,-64,62,None,-48,-49,-46,None,62,62,62,None,-45,-56,-55,62,-47,None,None,None,62,62,-65,-66,]),'error':([0,2,8,10,17,23,37,48,49,52,56,80,],[-3,5,-2,43,-3,55,-5,88,5,95,100,-4,]),'|':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,63,-42,-43,-44,63,63,63,63,63,-63,-64,63,-57,-48,-49,-46,-60,-50,63,-51,-62,-45,-56,-55,-52,-47,-61,-59,-58,63,63,-65,-66,]),'OR':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,64,-42,-43,-44,64,64,64,64,64,-63,-64,-53,-57,-48,-49,-46,-60,-50,-54,-51,-62,-45,-56,-55,-52,-47,-61,-59,-58,64,64,-65,-66,]),'NEQ':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,75,-42,-43,-44,75,75,75,75,75,-63,-64,75,None,-48,-49,-46,None,75,75,75,None,-45,-56,-55,75,-47,None,None,None,75,75,-65,-66,]),'RETURN':([0,2,3,4,7,8,11,15,17,18,19,20,24,27,28,29,31,32,34,35,37,41,47,49,50,53,68,76,77,80,84,85,92,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,33,-74,-71,-2,-12,-13,-3,-22,-17,-16,-18,33,-19,-20,33,-21,-14,-15,-5,-73,-36,33,33,-37,-23,33,-11,-4,-25,-24,-26,-35,33,33,-38,-27,33,33,-28,-30,-32,-33,-34,-75,33,33,-29,-31,]),'GE':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,66,-42,-43,-44,66,66,66,66,66,-63,-64,66,None,-48,-49,-46,None,66,66,66,None,-45,-56,-55,66,-47,None,None,None,66,66,-65,-66,]),'AND':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,57,-42,-43,-44,57,57,57,57,57,-63,-64,-53,-57,-48,-49,-46,-60,-50,57,-51,-62,-45,-56,-55,-52,-47,-61,-59,-58,57,57,-65,-66,]),':':([21,],[50,]),';':([5,9,13,16,21,22,26,30,36,38,39,43,44,45,46,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,123,128,133,134,137,],[37,-40,47,-41,-44,53,68,-42,-43,-7,80,84,85,-44,-70,120,-39,132,-63,-64,-53,-57,-48,-49,-46,-60,-50,-54,-51,-62,-45,-56,-55,-52,-47,-61,-59,-58,-6,-8,-69,-65,-66,145,]),'ID':([0,2,3,4,6,7,8,10,11,15,17,18,19,20,23,24,27,28,29,31,32,33,34,35,37,41,42,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,84,85,86,90,92,119,120,127,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,21,-74,40,-71,-2,45,-12,-13,-3,-22,-17,-16,45,-18,21,-19,-20,21,-21,45,-14,-15,-5,-73,83,-36,45,21,21,45,45,-37,45,45,45,45,45,45,45,45,45,45,45,45,-23,45,45,45,45,45,45,45,21,-11,121,-4,45,-25,-24,45,121,-26,45,-35,140,21,21,-38,-27,21,21,-28,-30,-32,-33,-34,-75,21,21,-29,-31,]),'BREAK':([0,2,3,4,7,8,11,15,17,18,19,20,24,27,28,29,31,32,34,35,37,41,47,49,50,53,68,76,77,80,84,85,92,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,22,-74,-71,-2,-12,-13,-3,-22,-17,-16,-18,22,-19,-20,22,-21,-14,-15,-5,-73,-36,22,22,-37,-23,22,-11,-4,-25,-24,-26,-35,22,22,-38,-27,22,22,-28,-30,-32,-33,-34,-75,22,22,-29,-31,]),'ELSE':([15,18,19,20,24,28,29,32,34,35,47,53,68,84,85,92,120,131,132,141,142,143,144,145,150,151,],[-13,-22,-17,-16,-18,-19,-20,-21,-14,-15,-36,-37,-23,-25,-24,-26,-35,-38,-27,148,149,-32,-33,-34,-29,-31,]),'}':([8,11,15,17,18,19,20,24,28,29,31,32,34,35,37,47,49,53,68,77,80,84,85,91,92,120,131,132,141,142,143,144,145,150,151,],[-2,-12,-13,-3,-22,-17,-16,-18,-19,-20,-9,-21,-14,-15,-5,-36,-10,-37,-23,-11,-4,-25,-24,131,-26,-35,-38,-27,-28,-30,-32,-33,-34,-29,-31,]),'SHR':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,69,-42,-43,-44,69,69,69,69,69,-63,-64,69,69,-48,-49,-46,69,69,69,69,69,-45,-56,-55,69,-47,69,69,69,69,69,-65,-66,]),'>':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,74,-42,-43,-44,74,74,74,74,74,-63,-64,74,None,-48,-49,-46,None,74,74,74,None,-45,-56,-55,74,-47,None,None,None,74,74,-65,-66,]),'(':([0,2,3,4,7,8,10,11,14,15,17,18,19,20,21,23,24,25,27,28,29,31,32,33,34,35,37,40,41,45,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,83,84,85,86,92,119,120,129,130,131,132,135,136,141,142,143,144,145,146,148,149,150,151,],[-3,-72,23,-74,-71,-2,23,-12,48,-13,-3,-22,-17,-16,52,23,-18,56,23,-19,-20,23,-21,23,-14,-15,-5,82,-73,52,-36,23,23,23,23,23,-37,23,23,23,23,23,23,23,23,23,23,23,23,-23,23,23,23,23,23,23,23,23,-11,-4,23,82,-25,-24,23,-26,23,-35,23,23,-38,-27,23,23,-28,-30,-32,-33,-34,-75,23,23,-29,-31,]),'*':([9,16,21,26,30,36,45,46,54,78,89,93,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,133,134,],[-40,-41,-44,72,-42,-43,-44,72,72,72,72,72,-63,-64,72,72,-48,-49,72,72,72,72,72,72,72,72,72,72,-47,72,72,72,72,72,-65,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'condition':([48,56,119,],[87,99,137,]),'declarations':([0,17,],[2,49,]),'fundef':([2,7,],[4,41,]),'instruction':([3,27,31,49,50,76,129,130,135,136,148,149,],[11,11,77,11,92,77,141,142,143,144,150,151,]),'instructions_opt':([3,49,],[12,91,]),'arg':([82,139,],[124,147,]),'inits':([6,90,],[39,39,]),'expression':([3,10,23,27,31,33,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,81,86,119,129,130,135,136,148,149,],[26,46,54,26,26,78,89,26,26,93,46,89,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,26,123,128,89,26,26,26,26,26,26,]),'const':([3,10,23,27,31,33,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,81,86,119,129,130,135,136,148,149,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'return_instr':([3,27,31,49,50,76,129,130,135,136,148,149,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'args_list':([82,],[126,]),'break_instr':([3,27,31,49,50,76,129,130,135,136,148,149,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'fundefs':([2,],[7,]),'expr_list_or_empty':([52,],[94,]),'compound_instr':([3,27,31,49,50,76,129,130,135,136,138,148,149,],[18,18,18,18,18,18,18,18,18,18,146,18,18,]),'while_instr':([3,27,31,49,50,76,129,130,135,136,148,149,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'program':([0,],[1,]),'choice_instr':([3,27,31,49,50,76,129,130,135,136,148,149,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'continue_instr':([3,27,31,49,50,76,129,130,135,136,148,149,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'init':([6,79,90,],[38,122,38,]),'instructions':([3,27,49,],[31,76,31,]),'expr_list':([10,52,],[44,96,]),'fundefs_opt':([2,],[3,]),'print_instr':([3,27,31,49,50,76,129,130,135,136,148,149,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'args_list_or_empty':([82,],[125,]),'labeled_instr':([3,27,31,49,50,76,129,130,135,136,148,149,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'assignment':([3,27,31,49,50,76,129,130,135,136,148,149,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'repeat_instr':([3,27,31,49,50,76,129,130,135,136,148,149,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'declaration':([2,49,],[8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',39),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',49),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',50),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',59),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',60),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',66),
  ('inits -> init','inits',1,'p_inits','Cparser.py',67),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',77),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',82),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',83),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',91),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',92),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',102),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',112),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',117),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',118),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',123),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',128),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',133),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',135),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',136),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',144),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',145),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',150),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',155),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',160),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',165),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',170),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',175),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',180),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',181),
  ('const -> STRING','const',1,'p_const','Cparser.py',182),
  ('expression -> const','expression',1,'p_expression','Cparser.py',187),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',188),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',189),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',190),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',191),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',192),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',193),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',194),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',207),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',208),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',209),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',210),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',224),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',225),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',230),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',231),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',241),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',242),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',247),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',248),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',258),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',263),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',264),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',269),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',270),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',280),
]
