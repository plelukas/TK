
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5E850F89D780FDDD54CF09A63F2C3116'
    
_lr_action_items = {'RETURN':([0,1,3,6,7,8,10,11,12,13,15,18,23,24,26,28,29,30,32,34,37,41,43,46,50,62,72,73,77,79,88,92,116,117,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,21,-71,-74,-2,-17,-16,-15,-14,-20,-18,21,-12,-21,21,-3,-13,-22,-19,-5,-73,-36,21,-11,-23,21,21,-37,-4,-26,-35,-25,-24,-27,21,21,-38,21,21,-33,-32,-34,-30,-28,-75,21,21,-31,-29,]),'}':([8,10,11,12,13,15,18,23,24,26,29,30,32,34,37,43,50,62,73,77,79,88,92,115,116,117,130,134,141,142,143,144,145,150,151,],[-2,-17,-16,-15,-14,-20,-18,-9,-12,-21,-3,-13,-22,-19,-5,-36,-11,-23,-10,-37,-4,-26,-35,134,-25,-24,-27,-38,-33,-32,-34,-30,-28,-31,-29,]),'CONTINUE':([0,1,3,6,7,8,10,11,12,13,15,18,23,24,26,28,29,30,32,34,37,41,43,46,50,62,72,73,77,79,88,92,116,117,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,9,-71,-74,-2,-17,-16,-15,-14,-20,-18,9,-12,-21,9,-3,-13,-22,-19,-5,-73,-36,9,-11,-23,9,9,-37,-4,-26,-35,-25,-24,-27,9,9,-38,9,9,-33,-32,-34,-30,-28,-75,9,9,-31,-29,]),'error':([0,1,8,27,29,31,37,44,47,73,78,79,],[-3,4,-2,70,-3,74,-5,84,89,4,119,-4,]),'LE':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,57,57,-44,57,57,57,57,-49,57,-46,57,-48,-47,None,57,-45,None,None,-55,None,57,57,None,-56,None,-64,-63,57,-66,-65,57,]),'/':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,55,55,-44,55,55,55,55,-49,55,55,55,-48,-47,55,55,55,55,55,55,55,55,55,55,55,55,-64,-63,55,-66,-65,55,]),'*':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,56,56,-44,56,56,56,56,-49,56,56,56,-48,-47,56,56,56,56,56,56,56,56,56,56,56,56,-64,-63,56,-66,-65,56,]),'OR':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,58,58,-44,58,58,58,58,-49,-50,-46,-52,-48,-47,-61,-54,-45,-58,-57,-55,-62,-51,-53,-60,-56,-59,-64,-63,58,-66,-65,58,]),'+':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,59,59,-44,59,59,59,59,-49,59,-46,59,-48,-47,59,59,-45,59,59,59,59,59,59,59,59,59,-64,-63,59,-66,-65,59,]),'ELSE':([10,11,12,13,15,18,26,30,32,34,43,62,77,88,92,116,117,130,134,141,142,143,144,145,150,151,],[-17,-16,-15,-14,-20,-18,-21,-13,-22,-19,-36,-23,-37,-26,-35,-25,-24,-27,-38,-33,-32,-34,148,149,-31,-29,]),';':([4,9,14,17,19,20,22,25,33,38,39,48,49,74,75,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,121,127,128,129,133,135,],[37,43,-44,-40,-43,-41,-42,62,77,-7,79,92,-44,116,117,-70,130,-39,-49,-50,-46,-52,-48,-47,-61,-54,-45,-58,-57,-55,-62,-51,-53,-60,-56,-59,-64,-63,-6,-8,-66,-65,143,-69,]),'ID':([0,1,3,5,6,7,8,10,11,12,13,15,18,21,23,24,26,27,28,29,30,31,32,34,37,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,77,78,79,80,82,88,92,113,114,116,117,118,125,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,14,40,-71,-74,-2,-17,-16,-15,-14,-20,-18,49,14,-12,-21,49,14,-3,-13,49,-22,-19,-5,-73,83,-36,49,49,14,49,-11,49,49,49,49,49,49,49,49,49,49,49,-23,49,49,49,49,49,49,49,14,14,-37,49,-4,122,49,-26,-35,49,122,-25,-24,49,139,-27,14,14,-38,14,14,-33,-32,-34,-30,-28,-75,14,14,-31,-29,]),'-':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,53,53,-44,53,53,53,53,-49,53,-46,53,-48,-47,53,53,-45,53,53,53,53,53,53,53,53,53,-64,-63,53,-66,-65,53,]),'GE':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,64,64,-44,64,64,64,64,-49,64,-46,64,-48,-47,None,64,-45,None,None,-55,None,64,64,None,-56,None,-64,-63,64,-66,-65,64,]),'&':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,65,65,-44,65,65,65,65,-49,65,-46,65,-48,-47,-61,65,-45,-58,-57,-55,-62,-51,65,-60,-56,-59,-64,-63,65,-66,-65,65,]),'(':([0,1,3,6,7,8,10,11,12,13,14,15,16,18,21,23,24,26,27,28,29,30,31,32,34,36,37,40,41,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,77,78,79,82,83,88,92,113,116,117,118,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,27,-71,-74,-2,-17,-16,-15,-14,44,-20,47,-18,27,27,-12,-21,27,27,-3,-13,27,-22,-19,78,-5,81,-73,-36,27,27,27,27,44,-11,27,27,27,27,27,27,27,27,27,27,27,-23,27,27,27,27,27,27,27,27,27,-37,27,-4,27,81,-26,-35,27,-25,-24,27,-27,27,27,-38,27,27,-33,-32,-34,-30,-28,-75,27,27,-31,-29,]),'REPEAT':([0,1,3,6,7,8,10,11,12,13,15,18,23,24,26,28,29,30,32,34,37,41,43,46,50,62,72,73,77,79,88,92,116,117,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,28,-71,-74,-2,-17,-16,-15,-14,-20,-18,28,-12,-21,28,-3,-13,-22,-19,-5,-73,-36,28,-11,-23,28,28,-37,-4,-26,-35,-25,-24,-27,28,28,-38,28,28,-33,-32,-34,-30,-28,-75,28,28,-31,-29,]),'SHR':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,68,68,-44,68,68,68,68,-49,68,-46,68,-48,-47,68,68,-45,68,68,-55,68,68,68,68,-56,68,-64,-63,68,-66,-65,68,]),'WHILE':([0,1,3,6,7,8,10,11,12,13,15,18,23,24,26,28,29,30,32,34,37,41,43,46,50,62,72,73,77,79,88,92,116,117,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,16,-71,-74,-2,-17,-16,-15,-14,-20,-18,16,-12,-21,16,-3,-13,-22,-19,-5,-73,-36,16,-11,-23,16,16,-37,-4,-26,-35,-25,-24,-27,16,16,-38,16,16,-33,-32,-34,-30,-28,-75,16,16,-31,-29,]),'{':([0,1,3,6,7,8,10,11,12,13,15,18,23,24,26,28,29,30,32,34,37,41,43,46,50,62,72,73,77,79,88,92,116,117,130,131,132,134,136,137,140,141,142,143,144,145,147,148,149,150,151,],[-3,-72,29,-71,-74,-2,-17,-16,-15,-14,-20,-18,29,-12,-21,29,-3,-13,-22,-19,-5,-73,-36,29,-11,-23,29,29,-37,-4,-26,-35,-25,-24,-27,29,29,-38,29,29,29,-33,-32,-34,-30,-28,-75,29,29,-31,-29,]),',':([17,19,20,22,38,39,49,75,76,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,121,123,124,127,128,129,135,139,146,],[-40,-43,-41,-42,-7,80,-44,118,-70,118,-49,-50,-46,-52,-48,-47,-61,-54,-45,-58,-57,-55,-62,-51,-53,-60,-56,-59,-64,-63,-6,-79,138,-8,-66,-65,-69,-80,-78,]),':':([14,],[46,]),'$end':([0,1,2,3,6,7,8,10,11,12,13,15,18,23,24,26,30,32,34,35,37,41,43,50,62,77,79,88,92,116,117,130,134,141,142,143,144,145,147,150,151,],[-3,-72,0,-10,-71,-74,-2,-17,-16,-15,-14,-20,-18,-9,-12,-21,-13,-22,-19,-1,-5,-73,-36,-11,-23,-37,-4,-26,-35,-25,-24,-27,-38,-33,-32,-34,-30,-28,-75,-31,-29,]),'TYPE':([0,1,6,7,8,29,37,41,73,79,81,134,138,147,],[-3,5,42,-74,-2,-3,-5,-73,114,-4,125,-38,125,-75,]),'INTEGER':([0,1,3,6,7,8,10,11,12,13,15,18,21,23,24,26,27,28,29,30,31,32,34,37,41,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,77,78,79,82,88,92,113,116,117,118,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,17,-71,-74,-2,-17,-16,-15,-14,-20,-18,17,17,-12,-21,17,17,-3,-13,17,-22,-19,-5,-73,-36,17,17,17,17,-11,17,17,17,17,17,17,17,17,17,17,17,-23,17,17,17,17,17,17,17,17,17,-37,17,-4,17,-26,-35,17,-25,-24,17,-27,17,17,-38,17,17,-33,-32,-34,-30,-28,-75,17,17,-31,-29,]),'=':([14,40,122,],[45,82,82,]),'^':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,54,54,-44,54,54,54,54,-49,54,-46,-52,-48,-47,-61,54,-45,-58,-57,-55,-62,-51,54,-60,-56,-59,-64,-63,54,-66,-65,54,]),'EQ':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,61,61,-44,61,61,61,61,-49,61,-46,61,-48,-47,None,61,-45,None,None,-55,None,61,61,None,-56,None,-64,-63,61,-66,-65,61,]),'BREAK':([0,1,3,6,7,8,10,11,12,13,15,18,23,24,26,28,29,30,32,34,37,41,43,46,50,62,72,73,77,79,88,92,116,117,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,33,-71,-74,-2,-17,-16,-15,-14,-20,-18,33,-12,-21,33,-3,-13,-22,-19,-5,-73,-36,33,-11,-23,33,33,-37,-4,-26,-35,-25,-24,-27,33,33,-38,33,33,-33,-32,-34,-30,-28,-75,33,33,-31,-29,]),'%':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,51,51,-44,51,51,51,51,-49,51,51,51,-48,-47,51,51,51,51,51,51,51,51,51,51,51,51,-64,-63,51,-66,-65,51,]),'UNTIL':([10,11,12,13,15,18,24,26,30,32,34,43,50,62,72,77,88,92,116,117,130,134,141,142,143,144,145,150,151,],[-17,-16,-15,-14,-20,-18,-12,-21,-13,-22,-19,-36,-11,-23,113,-37,-26,-35,-25,-24,-27,-38,-33,-32,-34,-30,-28,-31,-29,]),'FLOAT':([0,1,3,6,7,8,10,11,12,13,15,18,21,23,24,26,27,28,29,30,31,32,34,37,41,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,77,78,79,82,88,92,113,116,117,118,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,20,-71,-74,-2,-17,-16,-15,-14,-20,-18,20,20,-12,-21,20,20,-3,-13,20,-22,-19,-5,-73,-36,20,20,20,20,-11,20,20,20,20,20,20,20,20,20,20,20,-23,20,20,20,20,20,20,20,20,20,-37,20,-4,20,-26,-35,20,-25,-24,20,-27,20,20,-38,20,20,-33,-32,-34,-30,-28,-75,20,20,-31,-29,]),'STRING':([0,1,3,6,7,8,10,11,12,13,15,18,21,23,24,26,27,28,29,30,31,32,34,37,41,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,77,78,79,82,88,92,113,116,117,118,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,22,-71,-74,-2,-17,-16,-15,-14,-20,-18,22,22,-12,-21,22,22,-3,-13,22,-22,-19,-5,-73,-36,22,22,22,22,-11,22,22,22,22,22,22,22,22,22,22,22,-23,22,22,22,22,22,22,22,22,22,-37,22,-4,22,-26,-35,22,-25,-24,22,-27,22,22,-38,22,22,-33,-32,-34,-30,-28,-75,22,22,-31,-29,]),'NEQ':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,60,60,-44,60,60,60,60,-49,60,-46,60,-48,-47,None,60,-45,None,None,-55,None,60,60,None,-56,None,-64,-63,60,-66,-65,60,]),'SHL':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,63,63,-44,63,63,63,63,-49,63,-46,63,-48,-47,63,63,-45,63,63,-55,63,63,63,63,-56,63,-64,-63,63,-66,-65,63,]),'|':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,52,52,-44,52,52,52,52,-49,-50,-46,-52,-48,-47,-61,52,-45,-58,-57,-55,-62,-51,52,-60,-56,-59,-64,-63,52,-66,-65,52,]),'<':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,67,67,-44,67,67,67,67,-49,67,-46,67,-48,-47,None,67,-45,None,None,-55,None,67,67,None,-56,None,-64,-63,67,-66,-65,67,]),'PRINT':([0,1,3,6,7,8,10,11,12,13,15,18,23,24,26,28,29,30,32,34,37,41,43,46,50,62,72,73,77,79,88,92,116,117,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,31,-71,-74,-2,-17,-16,-15,-14,-20,-18,31,-12,-21,31,-3,-13,-22,-19,-5,-73,-36,31,-11,-23,31,31,-37,-4,-26,-35,-25,-24,-27,31,31,-38,31,31,-33,-32,-34,-30,-28,-75,31,31,-31,-29,]),'AND':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,66,66,-44,66,66,66,66,-49,-50,-46,-52,-48,-47,-61,66,-45,-58,-57,-55,-62,-51,-53,-60,-56,-59,-64,-63,66,-66,-65,66,]),')':([17,19,20,22,44,49,70,71,76,81,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,124,126,128,129,135,139,146,],[-40,-43,-41,-42,-68,-44,111,112,-70,-77,128,129,-67,131,-39,132,-49,-50,-46,-52,-48,-47,-61,-54,-45,-58,-57,-55,-62,-51,-53,-60,-56,-59,-64,-63,136,137,-79,-76,140,-66,-65,-69,-80,-78,]),'IF':([0,1,3,6,7,8,10,11,12,13,15,18,23,24,26,28,29,30,32,34,37,41,43,46,50,62,72,73,77,79,88,92,116,117,130,131,132,134,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,36,-71,-74,-2,-17,-16,-15,-14,-20,-18,36,-12,-21,36,-3,-13,-22,-19,-5,-73,-36,36,-11,-23,36,36,-37,-4,-26,-35,-25,-24,-27,36,36,-38,36,36,-33,-32,-34,-30,-28,-75,36,36,-31,-29,]),'>':([14,17,19,20,22,25,48,49,71,76,87,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,127,128,129,135,],[-44,-40,-43,-41,-42,69,69,-44,69,69,69,69,-49,69,-46,69,-48,-47,None,69,-45,None,None,-55,None,69,69,None,-56,None,-64,-63,69,-66,-65,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arg':([81,138,],[123,146,]),'declarations':([0,29,],[1,73,]),'instructions':([3,28,73,],[23,72,23,]),'instruction':([3,23,28,46,72,73,131,132,136,137,148,149,],[24,50,24,88,50,24,141,142,144,145,150,151,]),'choice_instr':([3,23,28,46,72,73,131,132,136,137,148,149,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'assignment':([3,23,28,46,72,73,131,132,136,137,148,149,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'inits':([5,114,],[39,39,]),'expr_list_or_empty':([44,],[85,]),'labeled_instr':([3,23,28,46,72,73,131,132,136,137,148,149,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'declaration':([1,73,],[8,8,]),'fundef':([1,6,],[7,41,]),'expr_list':([31,44,],[75,86,]),'expression':([3,21,23,27,28,31,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,72,73,78,82,113,118,131,132,136,137,148,149,],[25,48,25,71,25,76,76,87,25,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,25,25,90,127,90,135,25,25,25,25,25,25,]),'continue_instr':([3,23,28,46,72,73,131,132,136,137,148,149,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'init':([5,80,114,],[38,121,38,]),'args_list_or_empty':([81,],[126,]),'program':([0,],[2,]),'print_instr':([3,23,28,46,72,73,131,132,136,137,148,149,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'fundefs_opt':([1,],[3,]),'while_instr':([3,23,28,46,72,73,131,132,136,137,148,149,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'fundefs':([1,],[6,]),'compound_instr':([3,23,28,46,72,73,131,132,136,137,140,148,149,],[32,32,32,32,32,32,32,32,32,32,147,32,32,]),'repeat_instr':([3,23,28,46,72,73,131,132,136,137,148,149,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'break_instr':([3,23,28,46,72,73,131,132,136,137,148,149,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'return_instr':([3,23,28,46,72,73,131,132,136,137,148,149,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'const':([3,21,23,27,28,31,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,72,73,78,82,113,118,131,132,136,137,148,149,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'condition':([47,78,113,],[91,120,133,]),'instructions_opt':([3,73,],[35,115,]),'args_list':([81,],[124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',40),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',50),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',51),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',60),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',61),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',67),
  ('inits -> init','inits',1,'p_inits','Cparser.py',68),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',78),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',83),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',84),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',92),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',93),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',112),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',113),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',118),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',119),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',124),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',129),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',135),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',136),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',137),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',145),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',146),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',151),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',156),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',161),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',166),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',171),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',176),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',181),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',182),
  ('const -> STRING','const',1,'p_const','Cparser.py',183),
  ('expression -> const','expression',1,'p_expression','Cparser.py',193),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',194),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',213),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',214),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',215),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',216),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',233),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',234),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',239),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',240),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',250),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',251),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',256),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',257),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',267),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',272),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',273),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',278),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',279),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',289),
]
