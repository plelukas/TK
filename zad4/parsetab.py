
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5785556C9730925C98FB748FFBBC9964'
    
_lr_action_items = {'REPEAT':([0,1,4,5,7,8,17,18,20,22,25,26,27,28,32,33,34,35,37,38,40,42,45,47,50,56,75,76,77,78,91,114,125,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,27,-71,-74,-13,-17,-22,-18,-3,27,27,-16,-21,-14,-20,-19,-12,-15,-5,-73,-4,27,-36,-23,-37,27,-11,27,-26,-35,-24,-25,-27,27,27,-38,27,27,-75,-33,-32,-34,-30,-28,27,27,-31,-29,]),'ID':([0,1,3,4,5,7,8,16,17,18,20,22,23,25,26,27,28,32,33,34,35,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,78,79,86,91,114,121,122,125,126,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,10,-2,12,-71,-74,70,-13,-17,-22,-18,70,-3,12,12,-16,-21,-14,-20,-19,-12,-15,70,-5,83,-73,70,-4,90,12,70,70,-36,70,70,70,70,70,-23,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-37,12,-11,12,70,130,-26,-35,90,70,-24,70,-25,-27,12,12,-38,12,12,-75,-33,-32,-34,-30,-28,12,12,-31,-29,]),'CONTINUE':([0,1,4,5,7,8,17,18,20,22,25,26,27,28,32,33,34,35,37,38,40,42,45,47,50,56,75,76,77,78,91,114,125,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,13,-71,-74,-13,-17,-22,-18,-3,13,13,-16,-21,-14,-20,-19,-12,-15,-5,-73,-4,13,-36,-23,-37,13,-11,13,-26,-35,-24,-25,-27,13,13,-38,13,13,-75,-33,-32,-34,-30,-28,13,13,-31,-29,]),'FLOAT':([0,1,4,5,7,8,16,17,18,20,22,23,25,26,27,28,32,33,34,35,37,38,39,40,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,78,79,91,114,122,125,126,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,29,-71,-74,29,-13,-17,-22,-18,29,-3,29,29,-16,-21,-14,-20,-19,-12,-15,29,-5,-73,29,-4,29,29,29,-36,29,29,29,29,29,-23,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-37,29,-11,29,29,-26,-35,29,-24,29,-25,-27,29,29,-38,29,29,-75,-33,-32,-34,-30,-28,29,29,-31,-29,]),'STRING':([0,1,4,5,7,8,16,17,18,20,22,23,25,26,27,28,32,33,34,35,37,38,39,40,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,78,79,91,114,122,125,126,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,14,-71,-74,14,-13,-17,-22,-18,14,-3,14,14,-16,-21,-14,-20,-19,-12,-15,14,-5,-73,14,-4,14,14,14,-36,14,14,14,14,14,-23,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-37,14,-11,14,14,-26,-35,14,-24,14,-25,-27,14,14,-38,14,14,-75,-33,-32,-34,-30,-28,14,14,-31,-29,]),'RETURN':([0,1,4,5,7,8,17,18,20,22,25,26,27,28,32,33,34,35,37,38,40,42,45,47,50,56,75,76,77,78,91,114,125,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,16,-71,-74,-13,-17,-22,-18,-3,16,16,-16,-21,-14,-20,-19,-12,-15,-5,-73,-4,16,-36,-23,-37,16,-11,16,-26,-35,-24,-25,-27,16,16,-38,16,16,-75,-33,-32,-34,-30,-28,16,16,-31,-29,]),';':([6,9,11,12,13,14,15,19,24,29,30,70,71,80,81,82,88,89,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,137,140,],[40,-7,45,-44,50,-42,56,-40,75,-41,-43,-44,114,125,-70,127,-8,-6,133,-58,-49,-51,-48,-54,-56,-46,-59,-62,-61,-55,-47,-53,-50,-57,-60,-52,-45,-39,-63,-64,-66,-65,145,-69,]),':':([12,],[47,]),'error':([0,1,4,23,25,39,40,45,48,72,76,79,],[-3,6,-2,74,-3,82,-5,-4,93,116,6,123,]),'SHL':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,62,-40,-41,-43,-44,62,62,62,62,62,62,-49,62,-48,62,-56,-46,62,62,62,-55,-47,62,62,62,62,62,-45,62,-63,-64,-66,-65,62,]),'INTEGER':([0,1,4,5,7,8,16,17,18,20,22,23,25,26,27,28,32,33,34,35,37,38,39,40,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,78,79,91,114,122,125,126,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,19,-71,-74,19,-13,-17,-22,-18,19,-3,19,19,-16,-21,-14,-20,-19,-12,-15,19,-5,-73,19,-4,19,19,19,-36,19,19,19,19,19,-23,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-37,19,-11,19,19,-26,-35,19,-24,19,-25,-27,19,19,-38,19,19,-75,-33,-32,-34,-30,-28,19,19,-31,-29,]),'*':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,63,-40,-41,-43,-44,63,63,63,63,63,63,-49,63,-48,63,63,63,63,63,63,63,-47,63,63,63,63,63,63,63,-63,-64,-66,-65,63,]),',':([9,11,14,19,29,30,70,80,81,85,87,88,89,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,119,130,131,132,140,142,],[-7,46,-42,-40,-41,-43,-44,126,-70,129,-79,-8,-6,126,-58,-49,-51,-48,-54,-56,-46,-59,-62,-61,-55,-47,-53,-50,-57,-60,-52,-45,-63,-64,-80,-66,-65,-69,-78,]),'|':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,65,-40,-41,-43,-44,65,65,65,65,65,-58,-49,-51,-48,65,-56,-46,-59,-62,-61,-55,-47,65,-50,-57,-60,-52,-45,65,-63,-64,-66,-65,65,]),'UNTIL':([17,18,20,22,28,32,33,34,35,37,38,50,56,75,77,78,91,114,125,127,133,136,143,144,145,146,147,150,151,],[-13,-17,-22,-18,-16,-21,-14,-20,-19,-12,-15,-36,-23,-37,-11,122,-26,-35,-24,-25,-27,-38,-33,-32,-34,-30,-28,-31,-29,]),'<':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,67,-40,-41,-43,-44,67,67,67,67,67,None,-49,67,-48,67,-56,-46,None,None,None,-55,-47,67,67,None,None,67,-45,67,-63,-64,-66,-65,67,]),'BREAK':([0,1,4,5,7,8,17,18,20,22,25,26,27,28,32,33,34,35,37,38,40,42,45,47,50,56,75,76,77,78,91,114,125,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,24,-71,-74,-13,-17,-22,-18,-3,24,24,-16,-21,-14,-20,-19,-12,-15,-5,-73,-4,24,-36,-23,-37,24,-11,24,-26,-35,-24,-25,-27,24,24,-38,24,24,-75,-33,-32,-34,-30,-28,24,24,-31,-29,]),'WHILE':([0,1,4,5,7,8,17,18,20,22,25,26,27,28,32,33,34,35,37,38,40,42,45,47,50,56,75,76,77,78,91,114,125,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,21,-71,-74,-13,-17,-22,-18,-3,21,21,-16,-21,-14,-20,-19,-12,-15,-5,-73,-4,21,-36,-23,-37,21,-11,21,-26,-35,-24,-25,-27,21,21,-38,21,21,-75,-33,-32,-34,-30,-28,21,21,-31,-29,]),'+':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,69,-40,-41,-43,-44,69,69,69,69,69,69,-49,69,-48,69,69,-46,69,69,69,69,-47,69,69,69,69,69,-45,69,-63,-64,-66,-65,69,]),'SHR':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,57,-40,-41,-43,-44,57,57,57,57,57,57,-49,57,-48,57,-56,-46,57,57,57,-55,-47,57,57,57,57,57,-45,57,-63,-64,-66,-65,57,]),'ELSE':([17,18,20,22,28,32,33,34,35,38,50,56,75,91,114,125,127,133,136,143,144,145,146,147,150,151,],[-13,-17,-22,-18,-16,-21,-14,-20,-19,-15,-36,-23,-37,-26,-35,-24,-25,-27,-38,-33,-32,-34,148,149,-31,-29,]),'^':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,68,-40,-41,-43,-44,68,68,68,68,68,-58,-49,-51,-48,68,-56,-46,-59,-62,-61,-55,-47,68,68,-57,-60,-52,-45,68,-63,-64,-66,-65,68,]),'NEQ':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,51,-40,-41,-43,-44,51,51,51,51,51,None,-49,51,-48,51,-56,-46,None,None,None,-55,-47,51,51,None,None,51,-45,51,-63,-64,-66,-65,51,]),'%':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,52,-40,-41,-43,-44,52,52,52,52,52,52,-49,52,-48,52,52,52,52,52,52,52,-47,52,52,52,52,52,52,52,-63,-64,-66,-65,52,]),'&':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,53,-40,-41,-43,-44,53,53,53,53,53,-58,-49,-51,-48,53,-56,-46,-59,-62,-61,-55,-47,53,53,-57,-60,53,-45,53,-63,-64,-66,-65,53,]),'/':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,54,-40,-41,-43,-44,54,54,54,54,54,54,-49,54,-48,54,54,54,54,54,54,54,-47,54,54,54,54,54,54,54,-63,-64,-66,-65,54,]),'IF':([0,1,4,5,7,8,17,18,20,22,25,26,27,28,32,33,34,35,37,38,40,42,45,47,50,56,75,76,77,78,91,114,125,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,36,-71,-74,-13,-17,-22,-18,-3,36,36,-16,-21,-14,-20,-19,-12,-15,-5,-73,-4,36,-36,-23,-37,36,-11,36,-26,-35,-24,-25,-27,36,36,-38,36,36,-75,-33,-32,-34,-30,-28,36,36,-31,-29,]),'OR':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,55,-40,-41,-43,-44,55,55,55,55,55,-58,-49,-51,-48,-54,-56,-46,-59,-62,-61,-55,-47,-53,-50,-57,-60,-52,-45,55,-63,-64,-66,-65,55,]),'(':([0,1,4,5,7,8,10,12,16,17,18,20,21,22,23,25,26,27,28,32,33,34,35,36,37,38,39,40,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,75,76,77,78,79,83,91,114,122,125,126,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,23,-71,-74,43,48,23,-13,-17,-22,72,-18,23,-3,23,23,-16,-21,-14,-20,-19,79,-12,-15,23,-5,-73,23,-4,23,23,23,-36,23,23,23,23,23,-23,23,23,23,23,23,23,23,23,23,23,23,23,23,48,23,-37,23,-11,23,23,43,-26,-35,23,-24,23,-25,-27,23,23,-38,23,23,-75,-33,-32,-34,-30,-28,23,23,-31,-29,]),'-':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,58,-40,-41,-43,-44,58,58,58,58,58,58,-49,58,-48,58,58,-46,58,58,58,58,-47,58,58,58,58,58,-45,58,-63,-64,-66,-65,58,]),'=':([10,12,90,],[44,49,44,]),'GE':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,60,-40,-41,-43,-44,60,60,60,60,60,None,-49,60,-48,60,-56,-46,None,None,None,-55,-47,60,60,None,None,60,-45,60,-63,-64,-66,-65,60,]),'LE':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,61,-40,-41,-43,-44,61,61,61,61,61,None,-49,61,-48,61,-56,-46,None,None,None,-55,-47,61,61,None,None,61,-45,61,-63,-64,-66,-65,61,]),'>':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,59,-40,-41,-43,-44,59,59,59,59,59,None,-49,59,-48,59,-56,-46,None,None,None,-55,-47,59,59,None,None,59,-45,59,-63,-64,-66,-65,59,]),'EQ':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,66,-40,-41,-43,-44,66,66,66,66,66,None,-49,66,-48,66,-56,-46,None,None,None,-55,-47,66,66,None,None,66,-45,66,-63,-64,-66,-65,66,]),'PRINT':([0,1,4,5,7,8,17,18,20,22,25,26,27,28,32,33,34,35,37,38,40,42,45,47,50,56,75,76,77,78,91,114,125,127,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,39,-71,-74,-13,-17,-22,-18,-3,39,39,-16,-21,-14,-20,-19,-12,-15,-5,-73,-4,39,-36,-23,-37,39,-11,39,-26,-35,-24,-25,-27,39,39,-38,39,39,-75,-33,-32,-34,-30,-28,39,39,-31,-29,]),'{':([0,1,4,5,7,8,17,18,20,22,25,26,27,28,32,33,34,35,37,38,40,42,45,47,50,56,75,76,77,78,91,114,125,127,128,133,134,135,136,138,139,141,143,144,145,146,147,148,149,150,151,],[-3,-72,-2,25,-71,-74,-13,-17,-22,-18,-3,25,25,-16,-21,-14,-20,-19,-12,-15,-5,-73,-4,25,-36,-23,-37,25,-11,25,-26,-35,-24,-25,25,-27,25,25,-38,25,25,-75,-33,-32,-34,-30,-28,25,25,-31,-29,]),'TYPE':([0,1,4,7,8,25,40,42,43,45,76,129,136,141,],[-3,3,-2,41,-74,-3,-5,-73,86,-4,121,86,-38,-75,]),'$end':([0,1,2,4,5,7,8,17,18,20,22,26,28,31,32,33,34,35,37,38,40,42,45,50,56,75,77,91,114,125,127,133,136,141,143,144,145,146,147,150,151,],[-3,-72,0,-2,-10,-71,-74,-13,-17,-22,-18,-9,-16,-1,-21,-14,-20,-19,-12,-15,-5,-73,-4,-36,-23,-37,-11,-26,-35,-24,-25,-27,-38,-75,-33,-32,-34,-30,-28,-31,-29,]),')':([14,19,29,30,43,48,70,73,74,81,84,85,87,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,123,124,130,131,132,140,142,],[-42,-40,-41,-43,-77,-68,-44,118,119,-70,128,-76,-79,-67,131,132,-58,-49,-51,-48,-54,-56,-46,-59,-62,-61,-55,-47,-53,-50,-57,-60,-52,-45,-39,134,135,-63,-64,138,139,-80,-66,-65,-69,-78,]),'}':([4,17,18,20,22,25,26,28,32,33,34,35,37,38,40,45,50,56,75,76,77,91,114,120,125,127,133,136,143,144,145,146,147,150,151,],[-2,-13,-17,-22,-18,-3,-9,-16,-21,-14,-20,-19,-12,-15,-5,-4,-36,-23,-37,-10,-11,-26,-35,136,-24,-25,-27,-38,-33,-32,-34,-30,-28,-31,-29,]),'AND':([12,14,15,19,29,30,70,71,73,81,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,119,131,132,140,],[-44,-42,64,-40,-41,-43,-44,64,64,64,64,64,-58,-49,-51,-48,64,-56,-46,-59,-62,-61,-55,-47,-53,-50,-57,-60,-52,-45,64,-63,-64,-66,-65,64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([3,46,121,],[9,89,9,]),'args_list_or_empty':([43,],[84,]),'choice_instr':([5,26,27,47,76,78,134,135,138,139,148,149,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'expr_list':([39,48,],[80,92,]),'expression':([5,16,23,26,27,39,44,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,72,76,78,79,122,126,134,135,138,139,148,149,],[15,71,73,15,15,81,88,15,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,15,15,115,115,140,15,15,15,15,15,15,]),'compound_instr':([5,26,27,47,76,78,128,134,135,138,139,148,149,],[20,20,20,20,20,20,141,20,20,20,20,20,20,]),'const':([5,16,23,26,27,39,44,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,72,76,78,79,122,126,134,135,138,139,148,149,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'print_instr':([5,26,27,47,76,78,134,135,138,139,148,149,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'while_instr':([5,26,27,47,76,78,134,135,138,139,148,149,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'condition':([72,79,122,],[117,124,137,]),'continue_instr':([5,26,27,47,76,78,134,135,138,139,148,149,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'fundefs':([1,],[7,]),'program':([0,],[2,]),'instructions':([5,27,76,],[26,78,26,]),'break_instr':([5,26,27,47,76,78,134,135,138,139,148,149,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'repeat_instr':([5,26,27,47,76,78,134,135,138,139,148,149,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'return_instr':([5,26,27,47,76,78,134,135,138,139,148,149,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'expr_list_or_empty':([48,],[94,]),'labeled_instr':([5,26,27,47,76,78,134,135,138,139,148,149,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'instruction':([5,26,27,47,76,78,134,135,138,139,148,149,],[37,77,37,91,37,77,143,144,146,147,150,151,]),'declaration':([1,76,],[4,4,]),'fundefs_opt':([1,],[5,]),'inits':([3,121,],[11,11,]),'arg':([43,129,],[87,142,]),'args_list':([43,],[85,]),'declarations':([0,25,],[1,76,]),'instructions_opt':([5,76,],[31,120,]),'assignment':([5,26,27,47,76,78,134,135,138,139,148,149,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'fundef':([1,7,],[8,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',40),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',50),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',51),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',60),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',61),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',67),
  ('inits -> init','inits',1,'p_inits','Cparser.py',68),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',78),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',83),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',84),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',92),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',93),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',112),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',113),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',118),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',119),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',124),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',129),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',135),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',136),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',137),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',145),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',146),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',151),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',156),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',161),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',166),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',171),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',176),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',181),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',182),
  ('const -> STRING','const',1,'p_const','Cparser.py',183),
  ('expression -> const','expression',1,'p_expression','Cparser.py',193),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',194),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',213),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',214),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',215),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',216),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',233),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',234),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',239),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',240),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',250),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',251),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',256),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',257),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',267),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',272),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',273),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',278),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',279),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',289),
]
