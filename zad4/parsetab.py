
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '663DD51460331903F964F8F84AE54244'
    
_lr_action_items = {'UNTIL':([14,17,19,20,22,24,25,30,32,35,36,43,44,60,68,77,85,111,113,114,129,135,141,142,143,144,145,150,151,],[-19,-21,-14,-22,-13,-16,-12,-18,-17,-20,-15,84,-36,-23,-11,-37,-26,-35,-24,-25,-27,-38,-34,-28,-30,-32,-33,-29,-31,]),'TYPE':([0,1,5,7,8,31,40,41,76,80,81,135,140,146,],[-3,4,-74,-2,42,-3,-5,-73,118,-4,123,-38,123,-75,]),'NEQ':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,53,-42,-41,-43,-44,53,53,53,53,53,None,None,None,None,None,53,53,-48,-49,None,53,-55,-56,53,-45,53,-47,-46,-63,-64,53,-65,-66,53,]),'AND':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,54,-42,-41,-43,-44,54,54,54,54,54,-61,-62,-57,-59,-58,-53,-50,-48,-49,-60,-52,-55,-56,54,-45,-51,-47,-46,-63,-64,54,-65,-66,54,]),'<':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,58,-42,-41,-43,-44,58,58,58,58,58,None,None,None,None,None,58,58,-48,-49,None,58,-55,-56,58,-45,58,-47,-46,-63,-64,58,-65,-66,58,]),'RETURN':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,30,31,32,35,36,40,41,43,44,45,60,68,76,77,80,85,111,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,26,-74,-2,-71,26,-19,-21,-14,-22,-13,26,-16,-12,-18,-3,-17,-20,-15,-5,-73,26,-36,26,-23,-11,26,-37,-4,-26,-35,-24,-25,-27,26,26,-38,26,26,-34,-28,-30,-32,-33,-75,26,26,-29,-31,]),'}':([7,14,17,19,20,22,23,24,25,30,31,32,35,36,40,44,60,68,76,77,80,85,111,113,114,117,129,135,141,142,143,144,145,150,151,],[-2,-19,-21,-14,-22,-13,-9,-16,-12,-18,-3,-17,-20,-15,-5,-36,-23,-11,-10,-37,-4,-26,-35,-24,-25,135,-27,-38,-34,-28,-30,-32,-33,-29,-31,]),'-':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,67,-42,-41,-43,-44,67,67,67,67,67,67,67,67,67,67,67,67,-48,-49,67,67,67,67,67,-45,67,-47,-46,-63,-64,67,-65,-66,67,]),'%':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,57,-42,-41,-43,-44,57,57,57,57,57,57,57,57,57,57,57,57,-48,-49,57,57,57,57,57,57,57,-47,57,-63,-64,57,-65,-66,57,]),'EQ':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,51,-42,-41,-43,-44,51,51,51,51,51,None,None,None,None,None,51,51,-48,-49,None,51,-55,-56,51,-45,51,-47,-46,-63,-64,51,-65,-66,51,]),'REPEAT':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,30,31,32,35,36,40,41,43,44,45,60,68,76,77,80,85,111,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,10,-74,-2,-71,10,-19,-21,-14,-22,-13,10,-16,-12,-18,-3,-17,-20,-15,-5,-73,10,-36,10,-23,-11,10,-37,-4,-26,-35,-24,-25,-27,10,10,-38,10,10,-34,-28,-30,-32,-33,-75,10,10,-29,-31,]),'FLOAT':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,26,28,29,30,31,32,35,36,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,77,78,80,82,84,85,111,112,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,21,-74,-2,-71,21,-19,-21,-14,-22,-13,21,-16,-12,21,21,21,-18,-3,-17,-20,-15,-5,-73,21,-36,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-23,21,21,21,21,21,21,21,-11,21,-37,21,-4,21,21,-26,-35,21,-24,-25,-27,21,21,-38,21,21,-34,-28,-30,-32,-33,-75,21,21,-29,-31,]),'INTEGER':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,26,28,29,30,31,32,35,36,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,77,78,80,82,84,85,111,112,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,11,-74,-2,-71,11,-19,-21,-14,-22,-13,11,-16,-12,11,11,11,-18,-3,-17,-20,-15,-5,-73,11,-36,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-23,11,11,11,11,11,11,11,-11,11,-37,11,-4,11,11,-26,-35,11,-24,-25,-27,11,11,-38,11,11,-34,-28,-30,-32,-33,-75,11,11,-29,-31,]),')':([11,18,21,27,47,69,72,74,75,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,119,120,124,125,126,130,131,134,138,147,],[-40,-42,-41,-43,-68,-44,-70,115,116,-77,-67,130,131,132,-39,133,-61,-62,-57,-59,-58,-53,-50,-48,-49,-60,-52,-55,-56,-54,-45,-51,-47,-46,-63,-64,136,137,-79,139,-76,-65,-66,-69,-80,-78,]),'CONTINUE':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,30,31,32,35,36,40,41,43,44,45,60,68,76,77,80,85,111,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,12,-74,-2,-71,12,-19,-21,-14,-22,-13,12,-16,-12,-18,-3,-17,-20,-15,-5,-73,12,-36,12,-23,-11,12,-37,-4,-26,-35,-24,-25,-27,12,12,-38,12,12,-34,-28,-30,-32,-33,-75,12,12,-29,-31,]),'^':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,59,-42,-41,-43,-44,59,59,59,59,59,-61,-62,-57,-59,-58,59,59,-48,-49,-60,-52,-55,-56,59,-45,-51,-47,-46,-63,-64,59,-65,-66,59,]),';':([6,11,12,13,16,18,21,27,33,37,39,69,70,71,72,73,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,122,127,128,130,131,134,],[40,-40,44,-44,60,-42,-41,-43,77,80,-7,-44,111,113,-70,114,129,-39,-61,-62,-57,-59,-58,-53,-50,-48,-49,-60,-52,-55,-56,-54,-45,-51,-47,-46,-63,-64,-6,-8,141,-65,-66,-69,]),'ID':([0,1,3,4,5,7,8,10,14,17,19,20,22,23,24,25,26,28,29,30,31,32,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,77,78,79,80,82,84,85,111,112,113,114,118,123,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,13,38,-74,-2,-71,13,-19,-21,-14,-22,-13,13,-16,-12,69,69,69,-18,-3,-17,-20,-15,-5,-73,83,13,-36,13,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-23,69,69,69,69,69,69,69,-11,13,-37,69,121,-4,69,69,-26,-35,69,-24,-25,121,138,-27,13,13,-38,13,13,-34,-28,-30,-32,-33,-75,13,13,-29,-31,]),'+':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,64,-42,-41,-43,-44,64,64,64,64,64,64,64,64,64,64,64,64,-48,-49,64,64,64,64,64,-45,64,-47,-46,-63,-64,64,-65,-66,64,]),'OR':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,63,-42,-41,-43,-44,63,63,63,63,63,-61,-62,-57,-59,-58,-53,-50,-48,-49,-60,-52,-55,-56,-54,-45,-51,-47,-46,-63,-64,63,-65,-66,63,]),'SHR':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,62,-42,-41,-43,-44,62,62,62,62,62,62,62,62,62,62,62,62,-48,-49,62,62,-55,-56,62,-45,62,-47,-46,-63,-64,62,-65,-66,62,]),'$end':([0,1,2,3,5,7,8,9,14,17,19,20,22,23,24,25,30,32,35,36,40,41,44,60,68,77,80,85,111,113,114,129,135,141,142,143,144,145,146,150,151,],[-3,-72,0,-10,-74,-2,-71,-1,-19,-21,-14,-22,-13,-9,-16,-12,-18,-17,-20,-15,-5,-73,-36,-23,-11,-37,-4,-26,-35,-24,-25,-27,-38,-34,-28,-30,-32,-33,-75,-29,-31,]),'>':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,52,-42,-41,-43,-44,52,52,52,52,52,None,None,None,None,None,52,52,-48,-49,None,52,-55,-56,52,-45,52,-47,-46,-63,-64,52,-65,-66,52,]),'IF':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,30,31,32,35,36,40,41,43,44,45,60,68,76,77,80,85,111,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,15,-74,-2,-71,15,-19,-21,-14,-22,-13,15,-16,-12,-18,-3,-17,-20,-15,-5,-73,15,-36,15,-23,-11,15,-37,-4,-26,-35,-24,-25,-27,15,15,-38,15,15,-34,-28,-30,-32,-33,-75,15,15,-29,-31,]),'LE':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,49,-42,-41,-43,-44,49,49,49,49,49,None,None,None,None,None,49,49,-48,-49,None,49,-55,-56,49,-45,49,-47,-46,-63,-64,49,-65,-66,49,]),'(':([0,1,3,5,7,8,10,13,14,15,17,19,20,22,23,24,25,26,28,29,30,31,32,34,35,36,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,77,78,80,82,83,84,85,111,112,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,29,-74,-2,-71,29,47,-19,48,-21,-14,-22,-13,29,-16,-12,29,29,29,-18,-3,-17,78,-20,-15,81,-5,-73,29,-36,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-23,29,29,29,29,29,29,29,-11,47,29,-37,29,-4,29,81,29,-26,-35,29,-24,-25,-27,29,29,-38,29,29,-34,-28,-30,-32,-33,-75,29,29,-29,-31,]),'STRING':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,26,28,29,30,31,32,35,36,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,77,78,80,82,84,85,111,112,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,18,-74,-2,-71,18,-19,-21,-14,-22,-13,18,-16,-12,18,18,18,-18,-3,-17,-20,-15,-5,-73,18,-36,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-23,18,18,18,18,18,18,18,-11,18,-37,18,-4,18,18,-26,-35,18,-24,-25,-27,18,18,-38,18,18,-34,-28,-30,-32,-33,-75,18,18,-29,-31,]),'|':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,55,-42,-41,-43,-44,55,55,55,55,55,-61,-62,-57,-59,-58,55,-50,-48,-49,-60,-52,-55,-56,55,-45,-51,-47,-46,-63,-64,55,-65,-66,55,]),',':([11,18,21,27,37,39,69,71,72,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,122,124,126,127,130,131,134,138,147,],[-40,-42,-41,-43,79,-7,-44,112,-70,112,-61,-62,-57,-59,-58,-53,-50,-48,-49,-60,-52,-55,-56,-54,-45,-51,-47,-46,-63,-64,-6,-79,140,-8,-65,-66,-69,-80,-78,]),'/':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,56,-42,-41,-43,-44,56,56,56,56,56,56,56,56,56,56,56,56,-48,-49,56,56,56,56,56,56,56,-47,56,-63,-64,56,-65,-66,56,]),'PRINT':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,30,31,32,35,36,40,41,43,44,45,60,68,76,77,80,85,111,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,28,-74,-2,-71,28,-19,-21,-14,-22,-13,28,-16,-12,-18,-3,-17,-20,-15,-5,-73,28,-36,28,-23,-11,28,-37,-4,-26,-35,-24,-25,-27,28,28,-38,28,28,-34,-28,-30,-32,-33,-75,28,28,-29,-31,]),'{':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,30,31,32,35,36,40,41,43,44,45,60,68,76,77,80,85,111,113,114,129,132,133,135,136,137,139,141,142,143,144,145,146,148,149,150,151,],[-3,-72,31,-74,-2,-71,31,-19,-21,-14,-22,-13,31,-16,-12,-18,-3,-17,-20,-15,-5,-73,31,-36,31,-23,-11,31,-37,-4,-26,-35,-24,-25,-27,31,31,-38,31,31,31,-34,-28,-30,-32,-33,-75,31,31,-29,-31,]),'=':([13,38,121,],[46,82,82,]),':':([13,],[45,]),'WHILE':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,30,31,32,35,36,40,41,43,44,45,60,68,76,77,80,85,111,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,34,-74,-2,-71,34,-19,-21,-14,-22,-13,34,-16,-12,-18,-3,-17,-20,-15,-5,-73,34,-36,34,-23,-11,34,-37,-4,-26,-35,-24,-25,-27,34,34,-38,34,34,-34,-28,-30,-32,-33,-75,34,34,-29,-31,]),'SHL':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,61,-42,-41,-43,-44,61,61,61,61,61,61,61,61,61,61,61,61,-48,-49,61,61,-55,-56,61,-45,61,-47,-46,-63,-64,61,-65,-66,61,]),'GE':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,50,-42,-41,-43,-44,50,50,50,50,50,None,None,None,None,None,50,50,-48,-49,None,50,-55,-56,50,-45,50,-47,-46,-63,-64,50,-65,-66,50,]),'error':([0,1,7,28,29,31,40,47,48,76,78,80,],[-3,6,-2,73,75,-3,-5,89,92,6,120,-4,]),'&':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,65,-42,-41,-43,-44,65,65,65,65,65,-61,-62,-57,-59,-58,65,65,-48,-49,-60,65,-55,-56,65,-45,-51,-47,-46,-63,-64,65,-65,-66,65,]),'*':([11,13,16,18,21,27,69,70,72,74,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,127,130,131,134,],[-40,-44,66,-42,-41,-43,-44,66,66,66,66,66,66,66,66,66,66,66,66,-48,-49,66,66,66,66,66,66,66,-47,66,-63,-64,66,-65,-66,66,]),'ELSE':([14,17,19,20,22,24,30,32,35,36,44,60,77,85,111,113,114,129,135,141,142,143,144,145,150,151,],[-19,-21,-14,-22,-13,-16,-18,-17,-20,-15,-36,-23,-37,-26,-35,-24,-25,-27,-38,-34,148,149,-32,-33,-29,-31,]),'BREAK':([0,1,3,5,7,8,10,14,17,19,20,22,23,24,25,30,31,32,35,36,40,41,43,44,45,60,68,76,77,80,85,111,113,114,129,132,133,135,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,33,-74,-2,-71,33,-19,-21,-14,-22,-13,33,-16,-12,-18,-3,-17,-20,-15,-5,-73,33,-36,33,-23,-11,33,-37,-4,-26,-35,-24,-25,-27,33,33,-38,33,33,-34,-28,-30,-32,-33,-75,33,33,-29,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_list':([28,47,],[71,87,]),'declarations':([0,31,],[1,76,]),'print_instr':([3,10,23,43,45,76,132,133,136,137,148,149,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'inits':([4,118,],[37,37,]),'declaration':([1,76,],[7,7,]),'instructions_opt':([3,76,],[9,117,]),'fundef':([1,8,],[5,41,]),'labeled_instr':([3,10,23,43,45,76,132,133,136,137,148,149,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'args_list_or_empty':([81,],[125,]),'continue_instr':([3,10,23,43,45,76,132,133,136,137,148,149,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'init':([4,79,118,],[39,122,39,]),'program':([0,],[2,]),'condition':([48,78,84,],[90,119,128,]),'return_instr':([3,10,23,43,45,76,132,133,136,137,148,149,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'expr_list_or_empty':([47,],[88,]),'repeat_instr':([3,10,23,43,45,76,132,133,136,137,148,149,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'arg':([81,140,],[124,147,]),'fundefs_opt':([1,],[3,]),'compound_instr':([3,10,23,43,45,76,132,133,136,137,139,148,149,],[20,20,20,20,20,20,20,20,20,20,146,20,20,]),'while_instr':([3,10,23,43,45,76,132,133,136,137,148,149,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'expression':([3,10,23,26,28,29,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,76,78,82,84,112,132,133,136,137,148,149,],[16,16,16,70,72,74,16,16,86,72,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,16,91,127,91,134,16,16,16,16,16,16,]),'instructions':([3,10,76,],[23,43,23,]),'choice_instr':([3,10,23,43,45,76,132,133,136,137,148,149,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'fundefs':([1,],[8,]),'const':([3,10,23,26,28,29,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,76,78,82,84,112,132,133,136,137,148,149,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'break_instr':([3,10,23,43,45,76,132,133,136,137,148,149,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'args_list':([81,],[126,]),'assignment':([3,10,23,43,45,76,132,133,136,137,148,149,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'instruction':([3,10,23,43,45,76,132,133,136,137,148,149,],[25,25,68,68,85,25,142,143,144,145,150,151,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',40),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',50),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',51),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',60),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',61),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',67),
  ('inits -> init','inits',1,'p_inits','Cparser.py',68),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',78),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',83),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',84),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',92),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',93),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',112),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',113),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',118),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',119),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',124),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',129),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',135),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',136),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',137),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',145),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',146),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',151),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',156),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',161),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',166),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',171),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',176),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',181),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',182),
  ('const -> STRING','const',1,'p_const','Cparser.py',183),
  ('expression -> const','expression',1,'p_expression','Cparser.py',193),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',194),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',213),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',214),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',215),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',216),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',233),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',234),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',239),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',240),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',250),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',251),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',256),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',257),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',267),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',272),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',273),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',278),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',279),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',289),
]
