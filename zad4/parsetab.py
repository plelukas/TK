
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4A118BCA7C5FB17B0F2F0EA3E0D3E539'
    
_lr_action_items = {'error':([0,1,4,9,19,23,36,44,51,75,79,83,],[-3,3,-2,-5,48,-3,76,84,3,113,119,-4,]),'IF':([0,1,4,5,6,7,9,10,13,14,18,20,22,23,24,27,28,30,31,32,33,38,47,50,51,64,71,72,73,83,87,111,116,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,12,-5,-73,-15,-17,-22,12,-18,-3,-13,-12,-14,-20,-16,12,-19,-21,-36,-11,12,-23,12,-37,12,-4,-35,-26,-25,-24,12,12,-38,-27,12,12,-30,-28,-34,-33,-32,-75,12,12,-31,-29,]),'%':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,53,-44,-40,53,-44,53,53,53,-64,-63,53,-49,53,53,53,53,53,53,53,53,53,-48,53,-47,53,53,53,53,53,53,-66,-65,53,]),'STRING':([0,1,4,5,6,7,9,10,13,14,16,18,19,20,22,23,24,27,28,30,31,32,33,36,38,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,83,87,110,111,116,117,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,15,-5,-73,-15,-17,15,-22,15,15,-18,-3,-13,-12,-14,-20,-16,15,-19,15,-21,15,-36,-11,15,15,15,15,15,15,15,15,15,15,15,15,15,-23,15,15,15,15,15,15,15,-37,15,15,15,15,15,-4,-35,15,-26,-25,15,-24,15,15,-38,-27,15,15,-30,-28,-34,-33,-32,-75,15,15,-31,-29,]),'|':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,52,-44,-40,52,-44,52,52,52,-64,-63,-50,-49,-60,52,-46,-56,-61,-55,-57,-62,-58,-48,-52,-47,-45,-51,52,-59,52,52,-66,-65,52,]),'FLOAT':([0,1,4,5,6,7,9,10,13,14,16,18,19,20,22,23,24,27,28,30,31,32,33,36,38,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,83,87,110,111,116,117,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,26,-5,-73,-15,-17,26,-22,26,26,-18,-3,-13,-12,-14,-20,-16,26,-19,26,-21,26,-36,-11,26,26,26,26,26,26,26,26,26,26,26,26,26,-23,26,26,26,26,26,26,26,-37,26,26,26,26,26,-4,-35,26,-26,-25,26,-24,26,26,-38,-27,26,26,-30,-28,-34,-33,-32,-75,26,26,-31,-29,]),'>':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,70,-44,-40,70,-44,70,70,70,-64,-63,70,-49,None,70,-46,-56,None,-55,None,None,None,-48,70,-47,-45,70,70,None,70,70,-66,-65,70,]),'BREAK':([0,1,4,5,6,7,9,10,13,14,18,20,22,23,24,27,28,30,31,32,33,38,47,50,51,64,71,72,73,83,87,111,116,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,34,-5,-73,-15,-17,-22,34,-18,-3,-13,-12,-14,-20,-16,34,-19,-21,-36,-11,34,-23,34,-37,34,-4,-35,-26,-25,-24,34,34,-38,-27,34,34,-30,-28,-34,-33,-32,-75,34,34,-31,-29,]),'+':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,67,-44,-40,67,-44,67,67,67,-64,-63,67,-49,67,67,-46,67,67,67,67,67,67,-48,67,-47,-45,67,67,67,67,67,-66,-65,67,]),'SHR':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,57,-44,-40,57,-44,57,57,57,-64,-63,57,-49,57,57,-46,-56,57,-55,57,57,57,-48,57,-47,-45,57,57,57,57,57,-66,-65,57,]),'CONTINUE':([0,1,4,5,6,7,9,10,13,14,18,20,22,23,24,27,28,30,31,32,33,38,47,50,51,64,71,72,73,83,87,111,116,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,17,-5,-73,-15,-17,-22,17,-18,-3,-13,-12,-14,-20,-16,17,-19,-21,-36,-11,17,-23,17,-37,17,-4,-35,-26,-25,-24,17,17,-38,-27,17,17,-30,-28,-34,-33,-32,-75,17,17,-31,-29,]),'NEQ':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,62,-44,-40,62,-44,62,62,62,-64,-63,62,-49,None,62,-46,-56,None,-55,None,None,None,-48,62,-47,-45,62,62,None,62,62,-66,-65,62,]),'/':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,63,-44,-40,63,-44,63,63,63,-64,-63,63,-49,63,63,63,63,63,63,63,63,63,-48,63,-47,63,63,63,63,63,63,-66,-65,63,]),'&':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,68,-44,-40,68,-44,68,68,68,-64,-63,68,-49,-60,68,-46,-56,-61,-55,-57,-62,-58,-48,68,-47,-45,-51,68,-59,68,68,-66,-65,68,]),'^':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,65,-44,-40,65,-44,65,65,65,-64,-63,65,-49,-60,65,-46,-56,-61,-55,-57,-62,-58,-48,-52,-47,-45,-51,65,-59,65,65,-66,-65,65,]),'LE':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,58,-44,-40,58,-44,58,58,58,-64,-63,58,-49,None,58,-46,-56,None,-55,None,None,None,-48,58,-47,-45,58,58,None,58,58,-66,-65,58,]),'OR':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,55,-44,-40,55,-44,55,55,55,-64,-63,-50,-49,-60,-54,-46,-56,-61,-55,-57,-62,-58,-48,-52,-47,-45,-51,-53,-59,55,55,-66,-65,55,]),':':([35,],[73,]),'<':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,54,-44,-40,54,-44,54,54,54,-64,-63,54,-49,None,54,-46,-56,None,-55,None,None,None,-48,54,-47,-45,54,54,None,54,54,-66,-65,54,]),'(':([0,1,4,5,6,7,9,10,12,13,14,16,18,19,20,22,23,24,27,28,30,31,32,33,35,36,37,38,41,43,44,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,83,87,110,111,116,117,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,19,-5,-73,44,-15,-17,19,-22,19,19,-18,-3,-13,-12,-14,-20,-16,19,-19,75,19,79,-21,81,81,19,75,-36,-11,19,19,19,19,19,19,19,19,19,19,19,19,19,-23,19,19,19,19,19,19,19,-37,19,19,19,19,19,-4,-35,19,-26,-25,19,-24,19,19,-38,-27,19,19,-30,-28,-34,-33,-32,-75,19,19,-31,-29,]),'TYPE':([0,1,4,5,6,9,10,23,51,81,83,130,140,146,],[-3,8,-2,11,-74,-5,-73,-3,90,124,-4,-38,124,-75,]),'REPEAT':([0,1,4,5,6,7,9,10,13,14,18,20,22,23,24,27,28,30,31,32,33,38,47,50,51,64,71,72,73,83,87,111,116,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,32,-5,-73,-15,-17,-22,32,-18,-3,-13,-12,-14,-20,-16,32,-19,-21,-36,-11,32,-23,32,-37,32,-4,-35,-26,-25,-24,32,32,-38,-27,32,32,-30,-28,-34,-33,-32,-75,32,32,-31,-29,]),'AND':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,69,-44,-40,69,-44,69,69,69,-64,-63,-50,-49,-60,69,-46,-56,-61,-55,-57,-62,-58,-48,-52,-47,-45,-51,-53,-59,69,69,-66,-65,69,]),'SHL':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,59,-44,-40,59,-44,59,59,59,-64,-63,59,-49,59,59,-46,-56,59,-55,59,59,59,-48,59,-47,-45,59,59,59,59,59,-66,-65,59,]),'-':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,56,-44,-40,56,-44,56,56,56,-64,-63,56,-49,56,56,-46,56,56,56,56,56,56,-48,56,-47,-45,56,56,56,56,56,-66,-65,56,]),'ELSE':([13,14,18,22,24,28,30,31,33,38,47,64,72,87,111,116,118,130,132,141,142,143,144,145,150,151,],[-15,-17,-22,-18,-13,-14,-20,-16,-19,-21,-36,-23,-37,-35,-26,-25,-24,-38,-27,148,149,-34,-33,-32,-31,-29,]),'INTEGER':([0,1,4,5,6,7,9,10,13,14,16,18,19,20,22,23,24,27,28,30,31,32,33,36,38,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,83,87,110,111,116,117,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,39,-5,-73,-15,-17,39,-22,39,39,-18,-3,-13,-12,-14,-20,-16,39,-19,39,-21,39,-36,-11,39,39,39,39,39,39,39,39,39,39,39,39,39,-23,39,39,39,39,39,39,39,-37,39,39,39,39,39,-4,-35,39,-26,-25,39,-24,39,39,-38,-27,39,39,-30,-28,-34,-33,-32,-75,39,39,-31,-29,]),'ID':([0,1,4,5,6,7,8,9,10,11,13,14,16,18,19,20,22,23,24,27,28,30,31,32,33,36,38,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,82,83,87,90,110,111,116,117,118,124,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,35,41,-5,-73,43,-15,-17,46,-22,46,35,-18,-3,-13,-12,-14,-20,-16,35,-19,46,-21,46,-36,-11,35,46,46,46,46,46,46,46,46,46,46,46,46,-23,46,46,46,46,46,46,35,-37,35,46,46,46,46,127,-4,-35,127,46,-26,-25,46,-24,139,35,35,-38,-27,35,35,-30,-28,-34,-33,-32,-75,35,35,-31,-29,]),'PRINT':([0,1,4,5,6,7,9,10,13,14,18,20,22,23,24,27,28,30,31,32,33,38,47,50,51,64,71,72,73,83,87,111,116,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,36,-5,-73,-15,-17,-22,36,-18,-3,-13,-12,-14,-20,-16,36,-19,-21,-36,-11,36,-23,36,-37,36,-4,-35,-26,-25,-24,36,36,-38,-27,36,36,-30,-28,-34,-33,-32,-75,36,36,-31,-29,]),'GE':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,61,-44,-40,61,-44,61,61,61,-64,-63,61,-49,None,61,-46,-56,None,-55,None,None,None,-48,61,-47,-45,61,61,None,61,61,-66,-65,61,]),',':([15,21,26,39,40,42,46,77,78,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,121,123,125,126,133,134,135,139,147,],[-42,-43,-41,-40,-7,82,-44,117,-70,-64,-63,-50,-49,-60,-54,-46,-56,-61,-55,-57,-62,-58,-48,-52,-47,-45,-51,-53,-59,117,-8,-79,140,-6,-66,-65,-69,-80,-78,]),')':([15,21,26,39,46,48,49,75,78,81,84,85,86,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,119,120,122,123,125,133,134,135,139,147,],[-42,-43,-41,-40,-44,88,89,-68,-70,-77,128,-39,129,-64,-63,-50,-49,-60,-54,-46,-56,-61,-55,-57,-62,-58,-48,-52,-47,-45,-51,-53,-59,133,-67,134,136,137,138,-79,-76,-66,-65,-69,-80,-78,]),'WHILE':([0,1,4,5,6,7,9,10,13,14,18,20,22,23,24,27,28,30,31,32,33,38,47,50,51,64,71,72,73,83,87,111,116,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,37,-5,-73,-15,-17,-22,37,-18,-3,-13,-12,-14,-20,-16,37,-19,-21,-36,-11,37,-23,37,-37,37,-4,-35,-26,-25,-24,37,37,-38,-27,37,37,-30,-28,-34,-33,-32,-75,37,37,-31,-29,]),'=':([35,41,127,],[74,80,80,]),';':([3,15,17,21,26,29,34,35,39,40,42,45,46,76,77,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,126,131,133,134,135,],[9,-42,47,-43,-41,64,72,-44,-40,-7,83,87,-44,116,118,-70,-39,-64,-63,-50,-49,-60,-54,-46,-56,-61,-55,-57,-62,-58,-48,-52,-47,-45,-51,-53,-59,132,-8,-6,143,-66,-65,-69,]),'UNTIL':([13,14,18,22,24,27,28,30,31,33,38,47,50,64,71,72,87,111,116,118,130,132,141,142,143,144,145,150,151,],[-15,-17,-22,-18,-13,-12,-14,-20,-16,-19,-21,-36,-11,-23,110,-37,-35,-26,-25,-24,-38,-27,-30,-28,-34,-33,-32,-31,-29,]),'}':([4,9,13,14,18,20,22,23,24,27,28,30,31,33,38,47,50,51,64,72,83,87,91,111,116,118,130,132,141,142,143,144,145,150,151,],[-2,-5,-15,-17,-22,-9,-18,-3,-13,-12,-14,-20,-16,-19,-21,-36,-11,-10,-23,-37,-4,-35,130,-26,-25,-24,-38,-27,-30,-28,-34,-33,-32,-31,-29,]),'{':([0,1,4,5,6,7,9,10,13,14,18,20,22,23,24,27,28,30,31,32,33,38,47,50,51,64,71,72,73,83,87,111,116,118,128,129,130,132,136,137,138,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,23,-5,-73,-15,-17,-22,23,-18,-3,-13,-12,-14,-20,-16,23,-19,-21,-36,-11,23,-23,23,-37,23,-4,-35,-26,-25,-24,23,23,-38,-27,23,23,23,-30,-28,-34,-33,-32,-75,23,23,-31,-29,]),'EQ':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,60,-44,-40,60,-44,60,60,60,-64,-63,60,-49,None,60,-46,-56,None,-55,None,None,None,-48,60,-47,-45,60,60,None,60,60,-66,-65,60,]),'RETURN':([0,1,4,5,6,7,9,10,13,14,18,20,22,23,24,27,28,30,31,32,33,38,47,50,51,64,71,72,73,83,87,111,116,118,128,129,130,132,136,137,141,142,143,144,145,146,148,149,150,151,],[-3,-72,-2,-71,-74,16,-5,-73,-15,-17,-22,16,-18,-3,-13,-12,-14,-20,-16,16,-19,-21,-36,-11,16,-23,16,-37,16,-4,-35,-26,-25,-24,16,16,-38,-27,16,16,-30,-28,-34,-33,-32,-75,16,16,-31,-29,]),'$end':([0,1,2,4,5,6,7,9,10,13,14,18,20,22,24,25,27,28,30,31,33,38,47,50,64,72,83,87,111,116,118,130,132,141,142,143,144,145,146,150,151,],[-3,-72,0,-2,-71,-74,-10,-5,-73,-15,-17,-22,-9,-18,-13,-1,-12,-14,-20,-16,-19,-21,-36,-11,-23,-37,-4,-35,-26,-25,-24,-38,-27,-30,-28,-34,-33,-32,-75,-31,-29,]),'*':([15,21,26,29,35,39,45,46,49,78,85,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,133,134,135,],[-42,-43,-41,66,-44,-40,66,-44,66,66,66,-64,-63,66,-49,66,66,66,66,66,66,66,66,66,-48,66,-47,66,66,66,66,66,66,-66,-65,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_list':([36,75,],[77,114,]),'while_instr':([7,20,32,51,71,73,128,129,136,137,148,149,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'init':([8,82,90,],[40,126,40,]),'instructions':([7,32,51,],[20,71,20,]),'instruction':([7,20,32,51,71,73,128,129,136,137,148,149,],[27,50,27,27,50,111,141,142,144,145,150,151,]),'fundefs':([1,],[5,]),'fundef':([1,5,],[6,10,]),'args_list':([81,],[125,]),'expression':([7,16,19,20,32,36,44,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,73,74,75,79,80,110,117,128,129,136,137,148,149,],[29,45,49,29,29,78,85,29,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,29,29,112,78,85,121,85,135,29,29,29,29,29,29,]),'args_list_or_empty':([81,],[122,]),'arg':([81,140,],[123,147,]),'compound_instr':([7,20,32,51,71,73,128,129,136,137,138,148,149,],[18,18,18,18,18,18,18,18,18,18,146,18,18,]),'choice_instr':([7,20,32,51,71,73,128,129,136,137,148,149,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'inits':([8,90,],[42,42,]),'instructions_opt':([7,51,],[25,91,]),'return_instr':([7,20,32,51,71,73,128,129,136,137,148,149,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'declaration':([1,51,],[4,4,]),'assignment':([7,20,32,51,71,73,128,129,136,137,148,149,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'condition':([44,79,110,],[86,120,131,]),'continue_instr':([7,20,32,51,71,73,128,129,136,137,148,149,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'expr_list_or_empty':([75,],[115,]),'fundefs_opt':([1,],[7,]),'const':([7,16,19,20,32,36,44,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,73,74,75,79,80,110,117,128,129,136,137,148,149,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'program':([0,],[2,]),'print_instr':([7,20,32,51,71,73,128,129,136,137,148,149,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'labeled_instr':([7,20,32,51,71,73,128,129,136,137,148,149,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'break_instr':([7,20,32,51,71,73,128,129,136,137,148,149,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'declarations':([0,23,],[1,51,]),'repeat_instr':([7,20,32,51,71,73,128,129,136,137,148,149,],[22,22,22,22,22,22,22,22,22,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',40),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',50),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',51),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',60),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',61),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',67),
  ('inits -> init','inits',1,'p_inits','Cparser.py',68),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',78),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',83),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',84),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',92),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',93),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',112),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',113),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',118),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',119),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',124),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',129),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',135),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',136),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',137),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',145),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',146),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',151),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',156),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',161),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',166),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',171),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',176),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',181),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',182),
  ('const -> STRING','const',1,'p_const','Cparser.py',183),
  ('expression -> const','expression',1,'p_expression','Cparser.py',193),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',194),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',195),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',196),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',197),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',198),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',213),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',214),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',215),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',216),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',233),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',234),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',239),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',240),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',250),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',251),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',256),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',257),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',267),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',272),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',273),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',278),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',279),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',289),
]
